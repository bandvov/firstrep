{"version":3,"sources":["components/ErrorIndicator/error.svg","components/Header/index.js","components/Header/Header.js","services/SwapiService.js","components/Spinner/index.js","components/Spinner/Spinner.js","components/ErrorIndicator/index.js","components/ErrorIndicator/ErrorIndicator.js","components/RandomPlanet/RandomPlanet.js","components/RandomPlanet/index.js","components/ErrorButton/index.js","components/ErrorButton/ErrorButton.js","components/ItemList/index.js","components/ItemList/ItemList.js","components/PersonDetails/index.js","components/PersonDetails/PersonDetails.js","components/PeoplePage/index.js","components/PeoplePage/PeoplePage.js","components/App/index.js","components/App/App.js","index.js"],"names":["module","exports","Header","className","href","React","Component","SwapiService","_apiBase","getResourse","url","a","fetch","res","json","getAllPeople","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","_extractId","item","match","name","mass","birthYear","birth_year","gender","eyeColor","eye_color","diameter","climate","rotationPeriod","rotation_period","terrain","population","Spinner","ErrorIndicator","svg","PageView","Fragment","src","PlanetDetails","state","loading","error","onPlanetLoaded","setState","updatePlanet","Math","floor","random","then","catch","onError","err","this","interval","setInterval","console","log","clearInterval","errorMessage","hasError","spinner","view","ErrorButton","renderError","foo","bar","type","onClick","value","ItemList","people","onPeopleLoaded","updataPeopleList","props","getData","arr","key","onSelectPerson","items","randerItems","PersonDetails","updatePerson","personId","prevProps","PeoplePage","selectedPerson","swapiService","onPersonSelected","App","showRandomPlanet","toggleRandomPlanet","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.57c2261a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.b2138751.svg\";","import Header from './Header';\r\nexport default Header;","import React from 'react';\r\nimport './Header.css'\r\nexport default class Header extends React.Component {\r\n    render() {\r\n        return(\r\n              <div className=\"d-flex header\">\r\n              <h1><a href=\"#/\">Star DB</a></h1>\r\n                 <ul className=\"d-flex\">\r\n                  <li>\r\n                  <a href=\"#/people\" className=\"\">People</a>\r\n\r\n                  </li>\r\n                  <li>\r\n                  <a href=\"#/planets\" className=\"\">Planets</a>\r\n                  </li>\r\n                  <li>\r\n                  <a href=\"#ships\" className=\"\">Ships</a>\r\n                  </li>\r\n                 </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","export default class SwapiService {\r\n  _apiBase = \"https://swapi.co/api\";\r\n\r\n  getResourse = async url => {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    return res.json();\r\n  };\r\n  getAllPeople = async () => {\r\n    let res = await this.getResourse(\"/people/\");\r\n    return res.results.map(this._transformPerson);\r\n  };\r\n  getPerson = async id => {\r\n    const person = await this.getResourse(`/people/${id}/`);\r\n    return this._transformPerson(person);\r\n  };\r\n  getAllPlanets = async () => {\r\n    let res = await this.getResourse(\"/planets/\");\r\n    return res.results.map(this._transformPlanet);\r\n  };\r\n  getPlanet = async id => {\r\n    const planet = await this.getResourse(`/planets/${id}/`);\r\n    return this._transformPlanet(planet);\r\n  };\r\n  _extractId=(item)=> {    \r\n    return item.url.match(/\\/(\\d)*\\/$/)[1];\r\n  }\r\n  _transformPerson = person => {\r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      mass: person.mass,\r\n      birthYear: person.birth_year,\r\n      gender: person.gender,\r\n      eyeColor: person.eye_color\r\n    };\r\n  };\r\n  _transformPlanet = planet => {\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      diameter: planet.diameter,\r\n      climate: planet.climate,\r\n      rotationPeriod: planet.rotation_period,\r\n      terrain: planet.terrain,\r\n      population:planet.population\r\n    };\r\n  };\r\n}\r\n","import Spinner from './Spinner';\r\nexport default Spinner;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner=()=>{\r\n  return(\r\n    <div className=\"lds-css\">\r\n            <div className=\"lds-double-ring\">\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        )        \r\n      }\r\n      export default Spinner; ","import ErrorIndicator from './ErrorIndicator';\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './ErrorIndicator.css'\r\nimport svg from './error.svg';\r\nexport default function ErrorIndicator() {\r\n  return (\r\n    <div className=\"d-flex error-indicator\">\r\n    {svg}\r\n      <span>BOOM!</span>\r\n      <span>Something went wrong</span>\r\n      <span>we've already sent droids to fix it</span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./RandomPlanet.css\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\nimport Spinner from \"../Spinner\";\r\nimport ErrorIndicator from '../ErrorIndicator';\r\n\r\nexport default class RandomPlanet extends React.Component {\r\n  SwapiService = new SwapiService();\r\n  state = {\r\n    planet: {},\r\n    loading: true,\r\n    error:false\r\n  };\r\n  componentDidMount() {\r\n    this.updatePlanet();\r\n    this.interval = setInterval(this.updatePlanet, 3000);\r\n    console.log(\"mount\");\r\n  }\r\n  componentWillUnmount() {\r\n    console.log(\"unmount\");\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  onPlanetLoaded = planet => {\r\n    this.setState({ planet, loading: false });\r\n  };\r\n\r\n  updatePlanet = () => {\r\n    const id = Math.floor(Math.random() * 25) + 2;\r\n    this.SwapiService.getPlanet(id).then(this.onPlanetLoaded).catch(this.onError);\r\n  };\r\n  onError=(err)=>{\r\n    this.setState({error:true,loading:false});\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    const errorMessage= this.state.error?<ErrorIndicator />:null;\r\n    const hasError = !(this.state.loading||this.state.error);\r\n    const spinner = this.state.loading ? <Spinner /> : null;\r\n    const view = hasError ? (\r\n      <PageView planet={this.state.planet} />\r\n    ) : null;\r\n    return (\r\n      <div className=\"d-flex random-planet\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {view}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PageView({ planet }) {\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n        src={`https://starwars-visualguide.com/assets/img/planets/${planet.id}.jpg`}\r\n      />\r\n      <div className=\"\">\r\n        <ul className=\"list-group\">\r\n          <li>\r\n            <h3>Planet</h3>\r\n          </li>\r\n\r\n          <li className=\"list-group-item\">\r\n            <span>name</span> <span>{planet.name}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>diameter</span> <span>{planet.diameter}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>population</span> <span>{planet.population}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>climate</span> <span>{planet.climate}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>terrain</span> <span>{planet.terrain}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>rotation period</span> <span>{planet.rotationPeriod}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import PlanetDetails from './RandomPlanet';\r\nexport default PlanetDetails;","import ErrorButton from './ErrorButton';\r\nexport default ErrorButton;","import React from 'react';\r\nimport './ErrorButton.css';\r\nexport default class ErrorButton extends React.Component{\r\n    state={\r\n        renderError:false\r\n    }\r\n    render() {\r\n        if (this.state.renderError){\r\n            this.foo.bar =0;\r\n        }\r\n        return(\r\n            <input type=\"button\" className=\"btn btn-danger error-button\" onClick={()=>this.setState({renderError:true})} value=\"error button\" />\r\n\r\n        )\r\n    }\r\n\r\n}","import ItemList from './ItemList';\r\n\r\nexport default ItemList;","import React from \"react\";\r\nimport \"./ItemList.css\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\nimport Spinner from \"../Spinner\";\r\n\r\nexport default class ItemList extends React.Component {\r\n  state = {\r\n    people: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updataPeopleList();\r\n  }\r\n\r\n  onPeopleLoaded = people => {\r\n    this.setState({ people });\r\n  };\r\n  updataPeopleList() {\r\n    this.props.getData().then(this.onPeopleLoaded);\r\n  }\r\n\r\n  randerItems(arr) {\r\n    return arr.map(({ id, name }) => {\r\n      return (\r\n        <li\r\n          className=\"list-group-item\"\r\n          key={id}\r\n          onClick={() => this.props.onSelectPerson(id)}\r\n        >\r\n          {name}\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.people) {\r\n      return <Spinner />;\r\n    }\r\n    const items = this.randerItems(this.state.people);\r\n\r\n    return (\r\n      <div className=\"item-list\">\r\n        <ul className=\"list-group list-group-flush\">{items}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import PersonDetails from './PersonDetails';\r\nexport default PersonDetails;","import React from \"react\";\r\nimport \"./PersonDetails.css\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\nimport ErrorButton from '../ErrorButton';\r\n\r\nexport default class PersonDetails extends React.Component {\r\n  SwapiService = new SwapiService();\r\n  state = {\r\n    person: null\r\n  };\r\n  componentDudMount() {\r\n    this.updatePerson();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    console.log(\"updated\");\r\n    if (this.props.personId !== prevProps.personId) {\r\n      this.updatePerson();\r\n    }\r\n  }\r\n  updatePerson = () => {\r\n    if (!this.props.personId) {\r\n      return;\r\n    }\r\n    this.SwapiService.getPerson(this.props.personId).then(person => {\r\n      this.setState({ person });\r\n    });\r\n  };\r\n  render() {\r\n    console.log(\"props\", this.props);\r\n\r\n    console.log(\"state\", this.state);\r\n\r\n    if (!this.state.person) {\r\n      return (\r\n     \r\n          <div className=\"details-placeholder\">Select person from the list</div>\r\n      \r\n      );\r\n    }\r\n    const { id, name, eyeColor, gender, birthYear, mass } = this.state.person;\r\n\r\n    return (\r\n      <div className=\"d-flex person-details\">\r\n        {\" \"}\r\n        <img\r\n          src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`}\r\n        />\r\n        <ul className=\"list-group list-group-flush\">\r\n        <ErrorButton />\r\n          <li className=\"list-group-item\">\r\n            <span>name </span>\r\n            <span>{name}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>eyeColor </span>\r\n            <span>{eyeColor}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>gender </span>\r\n            <span>{gender}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>birth year </span>\r\n            <span>{birthYear}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>mass </span>\r\n            <span>{mass}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import PeoplePage from './PeoplePage';\r\n\r\nexport default PeoplePage;","import React from 'react';\r\nimport ItemList from '../ItemList';\r\nimport PersonDetails from '../PersonDetails';\r\nimport SwapiService from '../../services/SwapiService';\r\nimport ErrorIndicator from '../ErrorIndicator';\r\n\r\nexport default class PeopleList extends React.Component {\r\n    state={\r\n        selectedPerson:null,\r\n        hasError:false\r\n      }\r\n\r\n     swapiService= new SwapiService();\r\n  componentDidCatch() {\r\n      this.setState({hasError:true});\r\n  }\r\n\r\n  onPersonSelected =(id)=>{\r\nthis.setState({selectedPerson:id});\r\n  }\r\ncomponentDidCatch() {\r\n    this.setState({hasError:true});\r\n}\r\n render() {\r\n     if (this.state.hasError) {\r\n         return <ErrorIndicator />\r\n     }\r\n     return (\r\n        <div className=\"d-flex \">\r\n        <ItemList onSelectPerson={this.onPersonSelected} getData={this.swapiService.getAllPeople} />\r\n        <PersonDetails personId={this.state.selectedPerson}/>\r\n      </div>\r\n     )\r\n }   \r\n}","import App from './App';\r\n\r\nexport default App;","import React from \"react\";\r\nimport Header from \"../Header\";\r\nimport RendomPlanet from \"../RandomPlanet\";\r\nimport ErrorButton from '../ErrorButton';\r\nimport './App.css';\r\nimport PeoplePage from '../PeoplePage';\r\nimport ErrorIndicator from '../ErrorIndicator';\r\n\r\nexport default class App extends React.Component {\r\n  state={\r\n    showRandomPlanet:true,\r\n    hasError:false\r\n  }\r\n \r\n\r\n  toggleRandomPlanet=()=>{\r\n    this.setState({showRandomPlanet:!this.state.showRandomPlanet});\r\n  }\r\n  componentDidCatch() {\r\n    this.setState({hasError:true});\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />\r\n    }\r\n    const planet = this.state.showRandomPlanet?<RendomPlanet />:null;\r\n    return (\r\n      <div className=\"star-db\">\r\n        <Header />\r\n        {planet}\r\n    <div>\r\n        <input type=\"button\" className=\"btn btn-warning\" value=\"toggle random planet\" onClick={this.toggleRandomPlanet}/>\r\n        <ErrorButton />\r\n    </div>\r\n      <PeoplePage />\r\n      <PeoplePage />\r\n      <PeoplePage />\r\n  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/App';\n\nReactDom.render(<App />,document.querySelector('#root'));\n\n"],"sourceRoot":""}