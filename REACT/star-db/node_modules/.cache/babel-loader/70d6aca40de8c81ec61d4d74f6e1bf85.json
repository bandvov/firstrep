{"ast":null,"code":"class SwapiService {\n  constructor() {\n    this._swapiBase = 'https://swapi.co/api';\n  }\n\n  async getReasourse(url) {\n    const res = await fetch(\"\".concat(this._swapiBase).concat(url));\n\n    if (!res.ok) {\n      throw new Error(\"could not fetch \".concat(url, \" received \").concat(res.status));\n    }\n\n    const body = res.json();\n    return body;\n  }\n\n  getAllPeople() {\n    return this.getReasourse('/people/');\n  }\n\n  getPerson(id) {\n    return this.getReasourse(\"/people/\".concat(id));\n  }\n\n}\n\nconst swapi = new SwapiService();\nlet people = swapi.getAllPeople().then(res => console.log(res));\nconsole.log(people);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/index.js"],"names":["SwapiService","_swapiBase","getReasourse","url","res","fetch","ok","Error","status","body","json","getAllPeople","getPerson","id","swapi","people","then","console","log"],"mappings":"AAAA,MAAMA,YAAN,CAAmB;AAAA;AAAA,SAEnBC,UAFmB,GAEN,sBAFM;AAAA;;AAIjB,QAAOC,YAAP,CAAoBC,GAApB,EAAwB;AAClB,UAAMC,GAAG,GAAG,MAAMC,KAAK,WAAI,KAAKJ,UAAT,SAAsBE,GAAtB,EAAvB;;AACA,QAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACT,YAAM,IAAIC,KAAJ,2BAA6BJ,GAA7B,uBAA6CC,GAAG,CAACI,MAAjD,EAAN;AACH;;AACD,UAAMC,IAAI,GAAGL,GAAG,CAACM,IAAJ,EAAb;AACA,WAAOD,IAAP;AACH;;AACDE,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKT,YAAL,CAAkB,UAAlB,CAAP;AACH;;AACDU,EAAAA,SAAS,CAACC,EAAD,EAAK;AACV,WAAO,KAAKX,YAAL,mBAA6BW,EAA7B,EAAP;AACH;;AAjBc;;AAoBnB,MAAMC,KAAK,GAAG,IAAId,YAAJ,EAAd;AAEA,IAAIe,MAAM,GAAGD,KAAK,CAACH,YAAN,GAAqBK,IAArB,CAA2BZ,GAAD,IAAOa,OAAO,CAACC,GAAR,CAAYd,GAAZ,CAAjC,CAAb;AACCa,OAAO,CAACC,GAAR,CAAYH,MAAZ","sourcesContent":["class SwapiService {\n\n_swapiBase = 'https://swapi.co/api';\n\n  async  getReasourse(url){\n        const res = await fetch(`${this._swapiBase}${url}`);\n        if (!res.ok) {\n            throw new Error(`could not fetch ${url} received ${res.status}`);\n        }\n        const body = res.json();\n        return body;\n    }\n    getAllPeople() {\n        return this.getReasourse('/people/');\n    }\n    getPerson(id) {\n        return this.getReasourse(`/people/${id}`);\n    }\n\n}\nconst swapi = new SwapiService();\n\nlet people=  swapi.getAllPeople().then((res)=>console.log(res));\n console.log(people);\n \n\n\n\n"]},"metadata":{},"sourceType":"module"}