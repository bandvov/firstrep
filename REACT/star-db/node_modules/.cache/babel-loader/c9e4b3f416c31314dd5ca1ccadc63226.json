{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\src\\\\components\\\\RandomPlanet\\\\RandomPlanet.js\";\nimport React from \"react\";\nimport \"./RandomPlanet.css\";\nimport SwapiService from \"../../services/SwapiService\";\nimport Spinner from \"../Spinner\";\nimport ErrorIndicator from '../ErrorIndicator';\nexport default class RandomPlanet extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.SwapiService = new SwapiService();\n    this.state = {\n      planet: {},\n      loading: true,\n      error: false\n    };\n\n    this.onPlanetLoaded = planet => {\n      this.setState({\n        planet,\n        loading: false\n      });\n    };\n\n    this.updatePlanet = () => {\n      const id = Math.floor(Math.random() * 25) + 2;\n      this.SwapiService.getPlanet(id).then(this.onPlanetLoaded).catch(this.onError);\n    };\n\n    this.onError = err => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, 3000);\n    console.log(\"mount\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"unmount\");\n    clearInterval(this.interval);\n  }\n\n  render() {\n    console.log(this.state);\n    const errorMessage = this.state.error ? React.createElement(ErrorIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }) : null;\n    const hasError = !(this.state.loading || this.state.error);\n    const spinner = this.state.loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }) : null;\n    const view = hasError ? React.createElement(PageView, {\n      planet: this.state.planet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }) : null;\n    return React.createElement(\"div\", {\n      className: \"d-flex random-planet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, errorMessage, spinner, view);\n  }\n\n}\nRandomPlanet.defaultProps = {\n  updateInterval: 10000\n};\n\nfunction PageView({\n  planet\n}) {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"https://starwars-visualguide.com/assets/img/planets/\".concat(planet.id, \".jpg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Planet\")), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"name\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, planet.name)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"diameter\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, planet.diameter)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"population\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, planet.population)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"climate\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, planet.climate)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"terrain\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, planet.terrain)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"rotation period\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, planet.rotationPeriod)))));\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/components/RandomPlanet/RandomPlanet.js"],"names":["React","SwapiService","Spinner","ErrorIndicator","RandomPlanet","Component","state","planet","loading","error","onPlanetLoaded","setState","updatePlanet","id","Math","floor","random","getPlanet","then","catch","onError","err","componentDidMount","interval","setInterval","console","log","componentWillUnmount","clearInterval","render","errorMessage","hasError","spinner","view","defaultProps","updateInterval","PageView","name","diameter","population","climate","terrain","rotationPeriod"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./RandomPlanet.css\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\nimport Spinner from \"../Spinner\";\r\nimport ErrorIndicator from '../ErrorIndicator';\r\n\r\nexport default class RandomPlanet extends React.Component {\r\n  SwapiService = new SwapiService();\r\n  state = {\r\n    planet: {},\r\n    loading: true,\r\n    error:false\r\n  };\r\n  componentDidMount() {\r\n    this.updatePlanet();\r\n    this.interval = setInterval(this.updatePlanet, 3000);\r\n    console.log(\"mount\");\r\n  }\r\n  componentWillUnmount() {\r\n    console.log(\"unmount\");\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  onPlanetLoaded = planet => {\r\n    this.setState({ planet, loading: false });\r\n  };\r\n\r\n  updatePlanet = () => {\r\n    const id = Math.floor(Math.random() * 25) + 2;\r\n    this.SwapiService.getPlanet(id).then(this.onPlanetLoaded).catch(this.onError);\r\n  };\r\n  onError=(err)=>{\r\n    this.setState({error:true,loading:false});\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    const errorMessage= this.state.error?<ErrorIndicator />:null;\r\n    const hasError = !(this.state.loading||this.state.error);\r\n    const spinner = this.state.loading ? <Spinner /> : null;\r\n    const view = hasError ? (\r\n      <PageView planet={this.state.planet} />\r\n    ) : null;\r\n    return (\r\n      <div className=\"d-flex random-planet\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {view}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nRandomPlanet.defaultProps = {\r\n  updateInterval:10000\r\n}\r\n\r\nfunction PageView({ planet }) {\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n        src={`https://starwars-visualguide.com/assets/img/planets/${planet.id}.jpg`}\r\n      />\r\n      <div className=\"\">\r\n        <ul className=\"list-group\">\r\n          <li>\r\n            <h3>Planet</h3>\r\n          </li>\r\n\r\n          <li className=\"list-group-item\">\r\n            <span>name</span> <span>{planet.name}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>diameter</span> <span>{planet.diameter}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>population</span> <span>{planet.population}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>climate</span> <span>{planet.climate}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>terrain</span> <span>{planet.terrain}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>rotation period</span> <span>{planet.rotationPeriod}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}