{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\src\\\\components\\\\ItemList\\\\ItemList.js\";\nimport React from \"react\";\nimport \"./ItemList.css\";\nimport Spinner from \"../Spinner\";\nexport default class ItemList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      itemList: null\n    };\n\n    this.onPeopleLoaded = itemList => {\n      this.setState({\n        itemList\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updataPeopleList();\n  }\n\n  updataPeopleList() {\n    this.props.getData().then(this.onPeopleLoaded);\n  }\n\n  randerItems(arr) {\n    return arr.map(({\n      id,\n      name\n    }) => {\n      return React.createElement(\"li\", {\n        className: \"list-group-item\",\n        key: id,\n        onClick: () => this.props.onSelectPerson(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, name);\n    });\n  }\n\n  render() {\n    console.log('itemlist', this.state.itemList);\n\n    if (!this.state.itemList) {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n\n    const items = this.randerItems(this.state.itemList);\n    return React.createElement(\"div\", {\n      className: \"item-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, items));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/components/ItemList/ItemList.js"],"names":["React","Spinner","ItemList","Component","state","itemList","onPeopleLoaded","setState","componentDidMount","updataPeopleList","props","getData","then","randerItems","arr","map","id","name","onSelectPerson","render","console","log","items"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACpDC,KADoD,GAC5C;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD4C;;AAAA,SASpDC,cAToD,GASnCD,QAAQ,IAAI;AAC3B,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACD,KAXmD;AAAA;;AAKpDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,gBAAL;AACD;;AAKDA,EAAAA,gBAAgB,GAAG;AACjB,SAAKC,KAAL,CAAWC,OAAX,GAAqBC,IAArB,CAA0B,KAAKN,cAA/B;AACD;;AAEDO,EAAAA,WAAW,CAACC,GAAD,EAAM;AACf,WAAOA,GAAG,CAACC,GAAJ,CAAQ,CAAC;AAACC,MAAAA,EAAD;AAAIC,MAAAA;AAAJ,KAAD,KAAe;AAC5B,aACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,GAAG,EAAED,EAFP;AAGE,QAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWQ,cAAX,CAA0BF,EAA1B,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGC,IALH,CADF;AASD,KAVM,CAAP;AAWD;;AAEDE,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuB,KAAKjB,KAAL,CAAWC,QAAlC;;AAEA,QAAI,CAAC,KAAKD,KAAL,CAAWC,QAAhB,EAA0B;AACxB,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,UAAMiB,KAAK,GAAG,KAAKT,WAAL,CAAiB,KAAKT,KAAL,CAAWC,QAA5B,CAAd;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CiB,KAA7C,CADF,CADF;AAKD;;AA3CmD","sourcesContent":["import React from \"react\";\r\nimport \"./ItemList.css\";\r\nimport Spinner from \"../Spinner\";\r\n\r\nexport default class ItemList extends React.Component {\r\n  state = {\r\n    itemList: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updataPeopleList();\r\n  }\r\n\r\n  onPeopleLoaded = itemList => {\r\n    this.setState({ itemList });\r\n  };\r\n  updataPeopleList() {\r\n    this.props.getData().then(this.onPeopleLoaded);\r\n  }\r\n\r\n  randerItems(arr) {\r\n    return arr.map(({id,name}) => { \r\n      return (\r\n        <li\r\n          className=\"list-group-item\"\r\n          key={id}\r\n          onClick={() => this.props.onSelectPerson(id)}\r\n        >\r\n          {name}\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log('itemlist',this.state.itemList);\r\n    \r\n    if (!this.state.itemList) {\r\n      return <Spinner />;\r\n    }\r\n    const items = this.randerItems(this.state.itemList);\r\n\r\n    return (\r\n      <div className=\"item-list\">\r\n        <ul className=\"list-group list-group-flush\">{items}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}