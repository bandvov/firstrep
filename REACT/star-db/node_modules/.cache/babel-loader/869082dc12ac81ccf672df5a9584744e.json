{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\src\\\\components\\\\RandomPlanet\\\\RandomPlanet.js\";\nimport React from \"react\";\nimport \"./RandomPlanet.css\";\nimport SwapiService from \"../../services/SwapiService\";\nimport Spinner from \"../Spinner\";\nexport default class RandomPlanet extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.SwapiService = new SwapiService();\n    this.state = {\n      planet: {},\n      loading: true\n    };\n\n    this.onPlanetLoaded = planet => {\n      this.setState({\n        planet,\n        loading: false\n      });\n    };\n\n    this.updatePlanet = () => {\n      const id = Math.floor(Math.random() * 25) + 2;\n      this.SwapiService.getPlanet(id).then(this.onPlanetLoaded);\n    };\n  }\n\n  componentDidMount() {\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, 3000);\n    console.log('mount');\n  }\n\n  componentWillUnmount() {\n    console.log('unmount');\n    clearInterval(this.interval);\n  }\n\n  render() {\n    console.log(this.state);\n    const spinner = this.state.loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : null;\n    const view = !this.state.loading ? React.createElement(PageView, {\n      planet: this.state.planet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }) : null;\n    return React.createElement(\"div\", {\n      className: \"d-flex random-planet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, spinner, view);\n  }\n\n}\n\nfunction PageView({\n  planet\n}) {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"https://starwars-visualguide.com/assets/img/planets/\".concat(planet.id, \".jpg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Planet\")), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"name\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, planet.name)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"diameter\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, planet.diameter)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"population\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, planet.population)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"climate\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, planet.climate)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"terrain\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, planet.terrain)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"rotation period\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, planet.rotationPeriod)))));\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/components/RandomPlanet/RandomPlanet.js"],"names":["React","SwapiService","Spinner","RandomPlanet","Component","state","planet","loading","onPlanetLoaded","setState","updatePlanet","id","Math","floor","random","getPlanet","then","componentDidMount","interval","setInterval","console","log","componentWillUnmount","clearInterval","render","spinner","view","PageView","name","diameter","population","climate","terrain","rotationPeriod"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./RandomPlanet.css\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\nimport Spinner from \"../Spinner\";\r\n\r\nexport default class RandomPlanet extends React.Component {\r\n  SwapiService = new SwapiService();\r\n  state = {\r\n    planet: {},\r\n    loading: true\r\n  };\r\n  componentDidMount() {\r\n    this.updatePlanet();\r\n   this.interval= setInterval(this.updatePlanet,3000);\r\n    console.log('mount');\r\n    \r\n  }\r\n  componentWillUnmount() {\r\n    console.log('unmount');\r\nclearInterval(this.interval);\r\n  }\r\n\r\n  onPlanetLoaded = planet => {\r\n    this.setState({ planet, loading: false });\r\n  };\r\n\r\n  updatePlanet = () => {\r\n    const id = Math.floor(Math.random() * 25) + 2;\r\n\r\n    this.SwapiService.getPlanet(id).then(this.onPlanetLoaded);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    const spinner = this.state.loading ? <Spinner /> : null;\r\n    const view = !this.state.loading ?<PageView planet={this.state.planet} />:null;\r\n    return (\r\n<div className=\"d-flex random-planet\">\r\n        {spinner}\r\n        {view}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n function PageView({planet}){\r\n  return (\r\n    <React.Fragment>\r\n        <img\r\n          src={`https://starwars-visualguide.com/assets/img/planets/${planet.id}.jpg`}\r\n        />\r\n        <div className=\"\">\r\n          <ul className=\"list-group\">\r\n            <li>\r\n              <h3>Planet</h3>\r\n            </li>\r\n\r\n            <li className=\"list-group-item\">\r\n              <span>name</span> <span>{planet.name}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span>diameter</span> <span>{planet.diameter}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span>population</span> <span>{planet.population}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span>climate</span> <span>{planet.climate}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span>terrain</span> <span>{planet.terrain}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span>rotation period</span> <span>{planet.rotationPeriod}</span>\r\n            </li>\r\n          </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}