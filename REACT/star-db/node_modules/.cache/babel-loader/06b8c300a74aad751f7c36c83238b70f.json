{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from\"react\";import\"./RandomPlanet.css\";import SwapiService from\"../../services/SwapiService\";import Spinner from\"../Spinner\";import ErrorIndicator from'../ErrorIndicator';var RandomPlanet=/*#__PURE__*/function(_React$Component){_inherits(RandomPlanet,_React$Component);function RandomPlanet(){var _getPrototypeOf2;var _this;_classCallCheck(this,RandomPlanet);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(RandomPlanet)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.SwapiService=new SwapiService();_this.state={planet:{},loading:true,error:false};_this.onPlanetLoaded=function(planet){_this.setState({planet:planet,loading:false});};_this.updatePlanet=function(){// const id = Math.floor(Math.random() * 25) + 2;\nvar id=111;_this.SwapiService.getPlanet(id).then(_this.onPlanetLoaded).catch(_this.onError);};_this.onError=function(err){_this.setState({error:true,loading:false});};return _this;}_createClass(RandomPlanet,[{key:\"componentDidMount\",value:function componentDidMount(){this.updatePlanet();this.interval=setInterval(this.updatePlanet,3000);console.log(\"mount\");}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){console.log(\"unmount\");clearInterval(this.interval);}},{key:\"render\",value:function render(){console.log(this.state);var errorMessage=this.state.error?React.createElement(ErrorIndicator,null):null;var hasError=!(this.state.loading||this.state.error);var spinner=this.state.loading?React.createElement(Spinner,null):null;var view=hasError?React.createElement(PageView,{planet:this.state.planet}):null;return React.createElement(\"div\",{className:\"d-flex random-planet\"},errorMessage,spinner,view);}}]);return RandomPlanet;}(React.Component);export{RandomPlanet as default};function PageView(_ref){var planet=_ref.planet;return React.createElement(React.Fragment,null,React.createElement(\"img\",{src:\"https://starwars-visualguide.com/assets/img/planets/\".concat(planet.id,\".jpg\")}),React.createElement(\"div\",{className:\"\"},React.createElement(\"ul\",{className:\"list-group\"},React.createElement(\"li\",null,React.createElement(\"h3\",null,\"Planet\")),React.createElement(\"li\",{className:\"list-group-item\"},React.createElement(\"span\",null,\"name\"),\" \",React.createElement(\"span\",null,planet.name)),React.createElement(\"li\",{className:\"list-group-item\"},React.createElement(\"span\",null,\"diameter\"),\" \",React.createElement(\"span\",null,planet.diameter)),React.createElement(\"li\",{className:\"list-group-item\"},React.createElement(\"span\",null,\"population\"),\" \",React.createElement(\"span\",null,planet.population)),React.createElement(\"li\",{className:\"list-group-item\"},React.createElement(\"span\",null,\"climate\"),\" \",React.createElement(\"span\",null,planet.climate)),React.createElement(\"li\",{className:\"list-group-item\"},React.createElement(\"span\",null,\"terrain\"),\" \",React.createElement(\"span\",null,planet.terrain)),React.createElement(\"li\",{className:\"list-group-item\"},React.createElement(\"span\",null,\"rotation period\"),\" \",React.createElement(\"span\",null,planet.rotationPeriod)))));}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/components/RandomPlanet/RandomPlanet.js"],"names":["React","SwapiService","Spinner","ErrorIndicator","RandomPlanet","state","planet","loading","error","onPlanetLoaded","setState","updatePlanet","id","getPlanet","then","catch","onError","err","interval","setInterval","console","log","clearInterval","errorMessage","hasError","spinner","view","Component","PageView","name","diameter","population","climate","terrain","rotationPeriod"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./RandomPlanet.css\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\nimport Spinner from \"../Spinner\";\r\nimport ErrorIndicator from '../ErrorIndicator';\r\n\r\nexport default class RandomPlanet extends React.Component {\r\n  SwapiService = new SwapiService();\r\n  state = {\r\n    planet: {},\r\n    loading: true,\r\n    error:false\r\n  };\r\n  componentDidMount() {\r\n    this.updatePlanet();\r\n    this.interval = setInterval(this.updatePlanet, 3000);\r\n    console.log(\"mount\");\r\n  }\r\n  componentWillUnmount() {\r\n    console.log(\"unmount\");\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  onPlanetLoaded = planet => {\r\n    this.setState({ planet, loading: false });\r\n  };\r\n\r\n  updatePlanet = () => {\r\n    // const id = Math.floor(Math.random() * 25) + 2;\r\nconst id =111;\r\n    this.SwapiService.getPlanet(id).then(this.onPlanetLoaded).catch(this.onError);\r\n  };\r\n  onError=(err)=>{\r\n    this.setState({error:true,loading:false});\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    const errorMessage= this.state.error?<ErrorIndicator />:null;\r\n    const hasError = !(this.state.loading||this.state.error);\r\n    const spinner = this.state.loading ? <Spinner /> : null;\r\n    const view = hasError ? (\r\n      <PageView planet={this.state.planet} />\r\n    ) : null;\r\n    return (\r\n      <div className=\"d-flex random-planet\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {view}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PageView({ planet }) {\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n        src={`https://starwars-visualguide.com/assets/img/planets/${planet.id}.jpg`}\r\n      />\r\n      <div className=\"\">\r\n        <ul className=\"list-group\">\r\n          <li>\r\n            <h3>Planet</h3>\r\n          </li>\r\n\r\n          <li className=\"list-group-item\">\r\n            <span>name</span> <span>{planet.name}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>diameter</span> <span>{planet.diameter}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>population</span> <span>{planet.population}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>climate</span> <span>{planet.climate}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>terrain</span> <span>{planet.terrain}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>rotation period</span> <span>{planet.rotationPeriod}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}