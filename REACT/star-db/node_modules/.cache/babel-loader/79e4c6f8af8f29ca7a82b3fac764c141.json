{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\src\\\\components\\\\SwComponents\\\\List.js\";\nimport React from \"react\";\nimport ItemList from \"../ItemList\";\nimport withData from \"../hoc-helper\";\nimport SwapiService from \"../../services/SwapiService\";\nconst swapiService = new SwapiService();\nconst getAllPeople = swapiService.getAllPeople,\n      getAllPlanets = swapiService.getAllPlanets,\n      getAllStarships = swapiService.getAllStarships;\nswapiService.getAllPlanets().then(data => console.log(\"all planets\", data));\n\nconst withChildFunction = (Wrapped, fn) => {\n  return props => {\n    console.log(\"withChildFunction props\", props);\n    return React.createElement(Wrapped, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), fn);\n  };\n};\n\nconst renderName = ({\n  name\n}) => React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, name);\n\nconst renderNameAndModel = ({\n  name,\n  model\n}) => React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, name, \" (\", model, \")\");\n\nconst PersonList = withData(withChildFunction(ItemList, renderName), getAllPeople);\nconst PlanetList = withData(withChildFunction(ItemList, renderName), getAllPlanets);\nconst StarshipList = withData(withChildFunction(ItemList, renderNameAndModel), getAllStarships);\nconsole.log(PersonList);\nexport { PersonList, PlanetList, StarshipList };","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/components/SwComponents/List.js"],"names":["React","ItemList","withData","SwapiService","swapiService","getAllPeople","getAllPlanets","getAllStarships","then","data","console","log","withChildFunction","Wrapped","fn","props","renderName","name","renderNameAndModel","model","PersonList","PlanetList","StarshipList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,MAAMC,YAAY,GAAG,IAAID,YAAJ,EAArB;MAEQE,Y,GAAiDD,Y,CAAjDC,Y;MAAcC,a,GAAmCF,Y,CAAnCE,a;MAAeC,e,GAAoBH,Y,CAApBG,e;AACrCH,YAAY,CAACE,aAAb,GAA6BE,IAA7B,CAAkCC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,IAA3B,CAA1C;;AAEA,MAAMG,iBAAiB,GAAG,CAACC,OAAD,EAAUC,EAAV,KAAiB;AACzC,SAAOC,KAAK,IAAI;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCI,KAAvC;AAEA,WAAO,oBAAC,OAAD,oBAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAqBD,EAArB,CAAP;AACD,GAJD;AAKD,CAND;;AAOA,MAAME,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,IAAP,CAAjC;;AACA,MAAMC,kBAAkB,GAAG,CAAC;AAAED,EAAAA,IAAF;AAAQE,EAAAA;AAAR,CAAD,KACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,IADH,QACWE,KADX,MADF;;AAMA,MAAMC,UAAU,GAAGlB,QAAQ,CACzBU,iBAAiB,CAACX,QAAD,EAAWe,UAAX,CADQ,EAEzBX,YAFyB,CAA3B;AAIA,MAAMgB,UAAU,GAAGnB,QAAQ,CACzBU,iBAAiB,CAACX,QAAD,EAAWe,UAAX,CADQ,EAEzBV,aAFyB,CAA3B;AAIA,MAAMgB,YAAY,GAAGpB,QAAQ,CAC3BU,iBAAiB,CAACX,QAAD,EAAWiB,kBAAX,CADU,EAE3BX,eAF2B,CAA7B;AAIAG,OAAO,CAACC,GAAR,CAAYS,UAAZ;AAEA,SAASA,UAAT,EAAqBC,UAArB,EAAiCC,YAAjC","sourcesContent":["import React from \"react\";\r\nimport ItemList from \"../ItemList\";\r\nimport withData from \"../hoc-helper\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\n\r\nconst swapiService = new SwapiService();\r\n\r\nconst { getAllPeople, getAllPlanets, getAllStarships } = swapiService;\r\nswapiService.getAllPlanets().then(data => console.log(\"all planets\", data));\r\n\r\nconst withChildFunction = (Wrapped, fn) => {\r\n  return props => {\r\n    console.log(\"withChildFunction props\", props);\r\n\r\n    return <Wrapped {...props}>{fn}</Wrapped>;\r\n  };\r\n};\r\nconst renderName = ({ name }) => <span>{name}</span>;\r\nconst renderNameAndModel = ({ name, model }) => (\r\n  <span>\r\n    {name} ({model})\r\n  </span>\r\n);\r\n\r\nconst PersonList = withData(\r\n  withChildFunction(ItemList, renderName),\r\n  getAllPeople\r\n);\r\nconst PlanetList = withData(\r\n  withChildFunction(ItemList, renderName),\r\n  getAllPlanets\r\n);\r\nconst StarshipList = withData(\r\n  withChildFunction(ItemList, renderNameAndModel),\r\n  getAllStarships\r\n);\r\nconsole.log(PersonList);\r\n\r\nexport { PersonList, PlanetList, StarshipList };\r\n"]},"metadata":{},"sourceType":"module"}