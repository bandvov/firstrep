{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = \"https://swapi.co/api\";\n\n    this.getResourse = async url => {\n      const res = await fetch(\"\".concat(this._apiBase).concat(url));\n      return res.json();\n    };\n\n    this.getAllPeople = async () => {\n      let res = await this.getResourse(\"/people/\");\n      return res.results.map(this._transformPeople);\n    };\n\n    this.getPerson = async id => {\n      const res = await this.getResourse(\"/people/\".concat(id, \"/\"));\n      return res;\n    };\n\n    this.getAllPlanets = async () => {\n      let res = await this.getResourse(\"/planets/\");\n      return res.results;\n    };\n\n    this.getPlanet = async id => {\n      const res = await this.getResourse(\"/planets/\".concat(id, \"/\"));\n      return res.results.map(this._transformPlanet);\n    };\n\n    this._transformPeople = person => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        mass: person.mass,\n        birthYear: person.birth_year,\n        gender: person.gender,\n        eyeColor: person.eye_color\n      };\n    };\n\n    this._transformPlanet = planet => {\n      return {\n        name: planet.name,\n        diameter: planet.diameter,\n        climate: planet.climate,\n        rotationPeriod: planet.rotation_period,\n        terrain: planet.terrain\n      };\n    };\n  }\n\n  _extractId(item) {\n    return item.url.match(/\\/\\d+\\/$/)[0];\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/services/SwapiService.js"],"names":["SwapiService","_apiBase","getResourse","url","res","fetch","json","getAllPeople","results","map","_transformPeople","getPerson","id","getAllPlanets","getPlanet","_transformPlanet","person","_extractId","name","mass","birthYear","birth_year","gender","eyeColor","eye_color","planet","diameter","climate","rotationPeriod","rotation_period","terrain","item","match"],"mappings":"AAAA,eAAe,MAAMA,YAAN,CAAmB;AAAA;AAAA,SAChCC,QADgC,GACrB,sBADqB;;AAAA,SAGhCC,WAHgC,GAGlB,MAAMC,GAAN,IAAa;AACzB,YAAMC,GAAG,GAAG,MAAMC,KAAK,WAAI,KAAKJ,QAAT,SAAoBE,GAApB,EAAvB;AACA,aAAOC,GAAG,CAACE,IAAJ,EAAP;AACD,KAN+B;;AAAA,SAO9BC,YAP8B,GAOhB,YAAU;AACtB,UAAIH,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAiB,UAAjB,CAAhB;AACA,aAAOE,GAAG,CAACI,OAAJ,CAAYC,GAAZ,CAAgB,KAAKC,gBAArB,CAAP;AACD,KAV6B;;AAAA,SAW9BC,SAX8B,GAWlB,MAAOC,EAAP,IAAa;AACrB,YAAMR,GAAG,GAAG,MAAM,KAAKF,WAAL,mBAA4BU,EAA5B,OAAlB;AACA,aAAOR,GAAP;AACH,KAd6B;;AAAA,SAe/BS,aAf+B,GAehB,YAAW;AACvB,UAAIT,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAiB,WAAjB,CAAhB;AACA,aAAOE,GAAG,CAACI,OAAX;AACD,KAlB6B;;AAAA,SAmB9BM,SAnB8B,GAmBlB,MAAOF,EAAP,IAAa;AACrB,YAAMR,GAAG,GAAG,MAAM,KAAKF,WAAL,oBAA6BU,EAA7B,OAAlB;AACA,aAAOR,GAAG,CAACI,OAAJ,CAAYC,GAAZ,CAAgB,KAAKM,gBAArB,CAAP;AACH,KAtB6B;;AAAA,SA2B9BL,gBA3B8B,GA2BZM,MAAD,IAAW;AAC1B,aAAM;AACJJ,QAAAA,EAAE,EAAE,KAAKK,UAAL,CAAgBD,MAAhB,CADA;AAEJE,QAAAA,IAAI,EAACF,MAAM,CAACE,IAFR;AAGJC,QAAAA,IAAI,EAACH,MAAM,CAACG,IAHR;AAIJC,QAAAA,SAAS,EAACJ,MAAM,CAACK,UAJb;AAKJC,QAAAA,MAAM,EAACN,MAAM,CAACM,MALV;AAMJC,QAAAA,QAAQ,EAACP,MAAM,CAACQ;AANZ,OAAN;AAQD,KApC6B;;AAAA,SAqC9BT,gBArC8B,GAqCZU,MAAD,IAAW;AAC1B,aAAM;AACJP,QAAAA,IAAI,EAACO,MAAM,CAACP,IADR;AAEJQ,QAAAA,QAAQ,EAACD,MAAM,CAACC,QAFZ;AAGJC,QAAAA,OAAO,EAACF,MAAM,CAACE,OAHX;AAIJC,QAAAA,cAAc,EAACH,MAAM,CAACI,eAJlB;AAKJC,QAAAA,OAAO,EAACL,MAAM,CAACK;AALX,OAAN;AAOD,KA7C6B;AAAA;;AAuB9Bb,EAAAA,UAAU,CAACc,IAAD,EAAO;AAEf,WAAOA,IAAI,CAAC5B,GAAL,CAAS6B,KAAT,CAAe,UAAf,EAA2B,CAA3B,CAAP;AACD;;AA1B6B","sourcesContent":["export default class SwapiService {\r\n  _apiBase = \"https://swapi.co/api\"\r\n\r\n  getResourse = async url => {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    return res.json();\r\n  };\r\n    getAllPeople= async()=> {\r\n      let res = await this.getResourse(\"/people/\");            \r\n      return res.results.map(this._transformPeople);\r\n    };\r\n    getPerson = async (id) =>{\r\n        const res = await this.getResourse(`/people/${id}/`);\r\n        return res;\r\n    };\r\n   getAllPlanets= async ()=> {\r\n      let res = await this.getResourse(\"/planets/\");            \r\n      return res.results;\r\n    };\r\n    getPlanet = async (id) =>{\r\n        const res = await this.getResourse(`/planets/${id}/`);\r\n        return res.results.map(this._transformPlanet);\r\n    };\r\n    _extractId(item) {\r\n      \r\n      return item.url.match(/\\/\\d+\\/$/)[0];\r\n    }\r\n    _transformPeople=(person)=> {\r\n      return{\r\n        id: this._extractId(person),\r\n        name:person.name,\r\n        mass:person.mass,\r\n        birthYear:person.birth_year,\r\n        gender:person.gender,\r\n        eyeColor:person.eye_color\r\n      }\r\n    }\r\n    _transformPlanet=(planet)=> {\r\n      return{\r\n        name:planet.name,\r\n        diameter:planet.diameter,\r\n        climate:planet.climate,\r\n        rotationPeriod:planet.rotation_period,\r\n        terrain:planet.terrain\r\n      }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}