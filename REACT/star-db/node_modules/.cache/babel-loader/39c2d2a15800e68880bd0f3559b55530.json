{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = \"https://swapi.co/api\";\n\n    this.getResourse = async url => {\n      const res = await fetch(\"\".concat(this._apiBase).concat(url));\n      return res.json();\n    };\n\n    this.getPerson = async id => {\n      const res = await this.getResourse(\"/people/\".concat(id, \"/\"));\n      return res;\n    };\n\n    this._extractId = item => {\n      return item.url.match(/\\/\\d+\\/$/);\n    };\n\n    this._transformPeople = person => {\n      return {\n        id: this._extractId(person)\n      };\n    };\n  }\n\n  async getAllPeople() {\n    let res = await this.getResourse(\"/people/\");\n    return res.results;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/services/SwapiService.js"],"names":["SwapiService","_apiBase","getResourse","url","res","fetch","json","getPerson","id","_extractId","item","match","_transformPeople","person","getAllPeople","results"],"mappings":"AAAA,eAAe,MAAMA,YAAN,CAAmB;AAAA;AAAA,SAChCC,QADgC,GACrB,sBADqB;;AAAA,SAGhCC,WAHgC,GAGlB,MAAMC,GAAN,IAAa;AACzB,YAAMC,GAAG,GAAG,MAAMC,KAAK,WAAI,KAAKJ,QAAT,SAAoBE,GAApB,EAAvB;AACA,aAAOC,GAAG,CAACE,IAAJ,EAAP;AACD,KAN+B;;AAAA,SAW9BC,SAX8B,GAWlB,MAAOC,EAAP,IAAa;AACrB,YAAMJ,GAAG,GAAG,MAAM,KAAKF,WAAL,mBAA4BM,EAA5B,OAAlB;AACA,aAAOJ,GAAP;AACH,KAd6B;;AAAA,SAe9BK,UAf8B,GAelBC,IAAD,IAAS;AAClB,aAAOA,IAAI,CAACP,GAAL,CAASQ,KAAT,CAAe,UAAf,CAAP;AACD,KAjB6B;;AAAA,SAkB9BC,gBAlB8B,GAkBZC,MAAD,IAAW;AAC1B,aAAM;AACJL,QAAAA,EAAE,EAAE,KAAKC,UAAL,CAAgBI,MAAhB;AADA,OAAN;AAGD,KAtB6B;AAAA;;AAO/B,QAAMC,YAAN,GAAsB;AACnB,QAAIV,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAiB,UAAjB,CAAhB;AACA,WAAOE,GAAG,CAACW,OAAX;AACD;;AAV6B","sourcesContent":["export default class SwapiService {\r\n  _apiBase = \"https://swapi.co/api\"\r\n\r\n  getResourse = async url => {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    return res.json();\r\n  };\r\n   async getAllPeople () {\r\n      let res = await this.getResourse(\"/people/\");            \r\n      return res.results;\r\n    };\r\n    getPerson = async (id) =>{\r\n        const res = await this.getResourse(`/people/${id}/`);\r\n        return res;\r\n    };\r\n    _extractId=(item)=> {\r\n      return item.url.match(/\\/\\d+\\/$/);\r\n    }\r\n    _transformPeople=(person)=> {\r\n      return{\r\n        id: this._extractId(person)\r\n      }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}