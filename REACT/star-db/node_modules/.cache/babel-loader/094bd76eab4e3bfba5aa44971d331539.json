{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\src\\\\components\\\\RandomPlanet\\\\RandomPlanet.js\";\nimport React from \"react\";\nimport \"./RandomPlanet.css\";\nimport SwapiService from \"../../services/SwapiService\";\nimport Spinner from \"../Spinner\";\nimport ErrorIndicator from \"../ErrorIndicator\";\nexport default class PlanetDetails extends React.Component {\n  constructor() {\n    super();\n    this.swapiService = new SwapiService();\n    this.state = {\n      planet: {},\n      loading: true,\n      error: false\n    };\n\n    this.onPlanetLoaded = planet => {\n      this.setState({\n        planet,\n        loading: false\n      });\n    };\n\n    this.onError = err => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n\n    this.updatePlanet = () => {\n      // const id = Math.floor(Math.random() * 25) + 2;\n      const id = 12222;\n      this.swapiService.getPlanet(id).then(this.onPlanetLoaded).catch(this.onError);\n    };\n\n    this.updatePlanet();\n  }\n\n  render() {\n    const hasMessage = !(this.state.error || this.state.loading);\n    const spinner = this.state.loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : React.createElement(PlanetView, {\n      planet: this.state.planet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n    const errorMsg = this.state.error ? React.createElement(ErrorIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }) : null;\n    return React.createElement(\"div\", {\n      className: \"d-flex random-planet card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, errorMsg, spinner);\n  }\n\n}\n\nconst PlanetView = ({\n  planet\n}) => {\n  console.log(planet);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"planet-image\",\n    alt: \"planet\",\n    src: \"https://starwars-visualguide.com/assets/img/planets/\".concat(planet.id, \".jpg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, planet.name), React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Population: \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, planet.population)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Rotation period: \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, planet.rotation)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Diameter: \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, planet.diameter)))));\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/components/RandomPlanet/RandomPlanet.js"],"names":["React","SwapiService","Spinner","ErrorIndicator","PlanetDetails","Component","constructor","swapiService","state","planet","loading","error","onPlanetLoaded","setState","onError","err","updatePlanet","id","getPlanet","then","catch","render","hasMessage","spinner","errorMsg","PlanetView","console","log","name","population","rotation","diameter"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./RandomPlanet.css\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\nimport Spinner from \"../Spinner\";\r\nimport ErrorIndicator from \"../ErrorIndicator\";\r\n\r\nexport default class PlanetDetails extends React.Component {\r\n  swapiService = new SwapiService();\r\n  state = {\r\n    planet: {},\r\n    loading: true,\r\n    error: false\r\n  };\r\n  constructor() {\r\n    super();\r\n    this.updatePlanet();\r\n  }\r\n  onPlanetLoaded = planet => {\r\n    this.setState({ planet, loading: false });\r\n  };\r\n  onError = err => {\r\n    this.setState({ error: true, loading: false });\r\n  };\r\n  updatePlanet = () => {\r\n    // const id = Math.floor(Math.random() * 25) + 2;\r\n    const id = 12222;\r\n    this.swapiService\r\n      .getPlanet(id)\r\n      .then(this.onPlanetLoaded)\r\n      .catch(this.onError);\r\n  };\r\n\r\n  render() {\r\n    const hasMessage = !(this.state.error || this.state.loading);\r\n    const spinner = this.state.loading ?       <Spinner />:<PlanetView planet={this.state.planet} />\r\n    \r\n    const errorMsg =this.state.error ?<ErrorIndicator />:null;\r\n    return (\r\n      <div className=\"d-flex random-planet card\">\r\n        {errorMsg}\r\n        {spinner}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst PlanetView = ({ planet }) => {\r\n  console.log(planet);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n        className=\"planet-image\"\r\n        alt=\"planet\"\r\n        src={`https://starwars-visualguide.com/assets/img/planets/${planet.id}.jpg`}\r\n      />\r\n      <div className=\"card-body\">\r\n        <h4>{planet.name}</h4>\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Population: </span>\r\n            <span>{planet.population}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Rotation period: </span>\r\n            <span>{planet.rotation}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Diameter: </span>\r\n            <span>{planet.diameter}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}