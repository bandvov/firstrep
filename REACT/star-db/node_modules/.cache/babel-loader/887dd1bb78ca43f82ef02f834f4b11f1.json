{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\src\\\\components\\\\App\\\\App.js\";\nimport React from \"react\";\nimport Header from \"../Header\";\nimport RandomPlanet from \"../RandomPlanet\";\nimport ErrorButton from \"../ErrorButton\";\nimport \"./App.css\";\nimport ErrorIndicator from \"../ErrorIndicator\";\nimport SwapiService from \"../../services/SwapiService\";\nimport DummySwapiService from \"../../services/DummySwapiService\";\nimport AppContext from \"../SwapiServiceContext\";\nimport { PeoplePage, PlanetsPage, StarshipPage, LoginPage, SecretPage } from \"../Pages\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { StarshipDetails, PersonDetails } from \"../SwComponents\";\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.swapiService = new DummySwapiService();\n    this.state = {\n      showRandomPlanet: true,\n      hasError: false,\n      swapiService: new DummySwapiService(),\n      isLoggedIn: true\n    };\n\n    this.toggleRandomPlanet = () => {\n      this.setState({\n        showRandomPlanet: !this.state.showRandomPlanet\n      });\n    };\n\n    this.onServiceChange = () => {\n      this.setState(({\n        swapiService\n      }) => {\n        const Service = swapiService instanceof SwapiService ? DummySwapiService : SwapiService;\n        console.log(Service.name);\n        return {\n          swapiService: new Service()\n        };\n      });\n    };\n  }\n\n  componentDidCatch() {\n    this.setState({\n      hasError: true\n    });\n  }\n\n  render() {\n    console.log(this.state.swapiService);\n\n    if (this.state.hasError) {\n      return React.createElement(ErrorIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n\n    const planet = this.state.showRandomPlanet ? React.createElement(RandomPlanet, {\n      updateInterval: 11111,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }) : null;\n    return React.createElement(AppContext.Provider, {\n      value: this.state.swapiService,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"star-db\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Header, {\n      onServiceShange: this.onServiceChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), planet, React.createElement(\"div\", {\n      className: \"toggle-and-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      className: \"btn btn-warning\",\n      value: \"toggle random planet\",\n      onClick: this.toggleRandomPlanet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(ErrorButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"welcome to stardb\"),\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/people\",\n      render: () => React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"People\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/people/:id?\",\n      component: PeoplePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/planets\",\n      render: () => React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Planets\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/planets\",\n      component: PlanetsPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/starships\",\n      render: () => React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Starships\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/starships\",\n      component: StarshipPage,\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/starships/:id\",\n      render: ({\n        match\n      }) => {\n        const id = match.params.id;\n        console.log(\"match\", match);\n        return React.createElement(StarshipDetails, {\n          itemId: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/secret\",\n      render: () => React.createElement(SecretPage, {\n        isLoggedIn: this.state.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: LoginPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/components/App/App.js"],"names":["React","Header","RandomPlanet","ErrorButton","ErrorIndicator","SwapiService","DummySwapiService","AppContext","PeoplePage","PlanetsPage","StarshipPage","LoginPage","SecretPage","BrowserRouter","Route","StarshipDetails","PersonDetails","App","Component","swapiService","state","showRandomPlanet","hasError","isLoggedIn","toggleRandomPlanet","setState","onServiceChange","Service","console","log","name","componentDidCatch","render","planet","match","id","params"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Header from \"../Header\";\r\nimport RandomPlanet from \"../RandomPlanet\";\r\nimport ErrorButton from \"../ErrorButton\";\r\nimport \"./App.css\";\r\nimport ErrorIndicator from \"../ErrorIndicator\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\nimport DummySwapiService from \"../../services/DummySwapiService\";\r\nimport AppContext from \"../SwapiServiceContext\";\r\nimport { PeoplePage, PlanetsPage, StarshipPage,LoginPage, SecretPage } from \"../Pages\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { StarshipDetails, PersonDetails } from \"../SwComponents\";\r\n\r\nexport default class App extends React.Component {\r\n  swapiService = new DummySwapiService();\r\n\r\n  state = {\r\n    showRandomPlanet: true,\r\n    hasError: false,\r\n    swapiService: new DummySwapiService(),\r\n    isLoggedIn:true\r\n  };\r\n\r\n  toggleRandomPlanet = () => {\r\n    this.setState({ showRandomPlanet: !this.state.showRandomPlanet });\r\n  };\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n  onServiceChange = () => {\r\n    this.setState(({ swapiService }) => {\r\n      const Service =\r\n        swapiService instanceof SwapiService ? DummySwapiService : SwapiService;\r\n      console.log(Service.name);\r\n      return {\r\n        swapiService: new Service()\r\n      };\r\n    });\r\n  };\r\n  render() {\r\n    console.log(this.state.swapiService);\r\n\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n    const planet = this.state.showRandomPlanet ? (\r\n      <RandomPlanet updateInterval={11111} />\r\n    ) : null;\r\n\r\n    return (\r\n      <AppContext.Provider value={this.state.swapiService}>\r\n        <BrowserRouter>\r\n          <div className=\"star-db\">\r\n            <Header onServiceShange={this.onServiceChange} />\r\n            {planet}\r\n            <div className=\"toggle-and-error\">\r\n              <input\r\n                type=\"button\"\r\n                className=\"btn btn-warning\"\r\n                value=\"toggle random planet\"\r\n                onClick={this.toggleRandomPlanet}\r\n              />\r\n              <ErrorButton />\r\n            </div>\r\n            <Route path=\"/\" render={() => <h1>welcome to stardb</h1>} exact />\r\n            <Route path=\"/people\" render={() => <h2>People</h2>} />\r\n            <Route path=\"/people/:id?\" component={PeoplePage} />\r\n            <Route path=\"/planets\" render={() => <h2>Planets</h2>} />\r\n            <Route path=\"/planets\" component={PlanetsPage} />\r\n            <Route path=\"/starships\" render={() => <h2>Starships</h2>} />\r\n            <Route path=\"/starships\" component={StarshipPage} exact />\r\n            <Route\r\n              path=\"/starships/:id\"\r\n              render={({ match }) => {\r\n                const { id } = match.params;\r\n                console.log(\"match\", match);\r\n\r\n                return <StarshipDetails itemId={id} />;\r\n              }}\r\n            />\r\n            <Route path=\"/secret\" render={()=>(\r\n              <SecretPage isLoggedIn={this.state.isLoggedIn}/>\r\n            )} />\r\n            <Route path=\"/login\" component={LoginPage} />\r\n          </div>\r\n        </BrowserRouter>\r\n      </AppContext.Provider>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}