{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\src\\\\components\\\\PersonDetails\\\\PersonDetails.js\";\nimport React from \"react\";\nimport \"./PersonDetails.css\";\nimport SwapiService from \"../../services/SwapiService\";\nimport Spinner from '../Spinner';\nexport default class PersonDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      person: null,\n      loading: true\n    };\n    this.swapiService = new SwapiService();\n\n    this.updatePerson = () => {\n      const personId = this.props.personId;\n\n      if (!personId) {\n        return;\n      }\n\n      this.swapiService.getPerson(personId).then(person => {\n        this.setState({\n          person,\n          loading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updatePerson();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.personId !== prevProps.personId) {\n      this.updatePerson();\n    }\n  }\n\n  render() {\n    if (!this.state.person) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"select a person from the list\");\n    }\n\n    const _this$state$person = this.state.person,\n          id = _this$state$person.id,\n          name = _this$state$person.name,\n          gender = _this$state$person.gender,\n          eyeColor = _this$state$person.eyeColor,\n          birth = _this$state$person.birth,\n          height = _this$state$person.height;\n    return React.createElement(\"div\", {\n      className: \"card person-details d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"person-image\",\n      src: \"https://starwars-visualguide.com/assets/img/characters/\".concat(id, \".jpg\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, name, \" \", this.props.personId), React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Gender\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, gender)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Birth Year\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, birth)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"eyeColor\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, eyeColor, \"r\")), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Height\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, height, \"r\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/components/PersonDetails/PersonDetails.js"],"names":["React","SwapiService","Spinner","PersonDetails","Component","state","person","loading","swapiService","updatePerson","personId","props","getPerson","then","setState","componentDidMount","componentDidUpdate","prevProps","render","id","name","gender","eyeColor","birth","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./PersonDetails.css\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\nimport Spinner from '../Spinner';\r\n\r\nexport default class PersonDetails extends React.Component {\r\n  state = {\r\n    person: null,\r\n    loading:true\r\n  };\r\n  swapiService = new SwapiService();\r\n\r\n  componentDidMount() {\r\n    this.updatePerson();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n  if (this.state.personId !==prevProps.personId) {\r\n    this.updatePerson();\r\n  }\r\n  }\r\n  updatePerson = () => {\r\n    const { personId } = this.props;\r\n    if (!personId) {\r\n      return;\r\n    }\r\n    this.swapiService.getPerson(personId).then(person => {\r\n      this.setState({ person,loading:false });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.person) {\r\n      return(\r\n        <span>select a person from the list</span>\r\n      )\r\n    }\r\n\r\n    const { id, name, gender, eyeColor, birth, height } = this.state.person;\r\n    return (\r\n      <div className=\"card person-details d-flex\">\r\n        <img\r\n          className=\"person-image\"\r\n          src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`}\r\n        />\r\n\r\n        <div className=\"card-body\">\r\n          <h4>\r\n            {name} {this.props.personId}\r\n          </h4>\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Gender</span>\r\n              <span>{gender}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Birth Year</span>\r\n              <span>{birth}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">eyeColor</span>\r\n              <span>{eyeColor}r</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Height</span>\r\n              <span>{height}r</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}