{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\src\\\\components\\\\SwComponents\\\\List.js\";\nimport React from \"react\";\nimport ItemList from \"../ItemList\";\nimport { withData, withSwapiService } from \"../hoc-helper\";\n\nconst withChildFunction = (Wrapped, fn) => {\n  return props => {\n    console.log(\"withChildFunction props\", props);\n    return React.createElement(Wrapped, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }), fn);\n  };\n};\n\nconst renderName = ({\n  name\n}) => React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, name);\n\nconst renderNameAndModel = ({\n  name,\n  model\n}) => React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, name, \" (\", model, \")\");\n\nconst mapPersonMethodToProps = swapiService => {\n  return {\n    getData: swapiService.getAllPeople\n  };\n};\n\nconst mapPlanetMethodToProps = swapiService => {\n  return {\n    getData: swapiService.getAllPlanets\n  };\n};\n\nconst mapStarshipMethodToProps = swapiService => {\n  return {\n    getData: swapiService.getAllStarships\n  };\n};\n\nconst PersonList = withSwapiService(mapPersonMethodToProps, withData(withChildFunction(ItemList, renderName)));\nconst PlanetList = withSwapiService(mapPlanetMethodToProps, withData(withChildFunction(ItemList, renderName)));\nconst StarshipList = withSwapiService(mapStarshipMethodToProps, withData(withChildFunction(ItemList, renderNameAndModel)));\nconsole.log(PersonList);\nexport { PersonList, PlanetList, StarshipList };","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/components/SwComponents/List.js"],"names":["React","ItemList","withData","withSwapiService","withChildFunction","Wrapped","fn","props","console","log","renderName","name","renderNameAndModel","model","mapPersonMethodToProps","swapiService","getData","getAllPeople","mapPlanetMethodToProps","getAllPlanets","mapStarshipMethodToProps","getAllStarships","PersonList","PlanetList","StarshipList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,eAA3C;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,OAAD,EAAUC,EAAV,KAAiB;AACzC,SAAOC,KAAK,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AAEA,WAAO,oBAAC,OAAD,oBAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAqBD,EAArB,CAAP;AACD,GAJD;AAKD,CAND;;AAOA,MAAMI,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,IAAP,CAAjC;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAED,EAAAA,IAAF;AAAQE,EAAAA;AAAR,CAAD,KACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,IADH,QACWE,KADX,MADF;;AAKA,MAAMC,sBAAsB,GAAGC,YAAY,IAAI;AAC7C,SAAO;AACLC,IAAAA,OAAO,EAAED,YAAY,CAACE;AADjB,GAAP;AAGD,CAJD;;AAKA,MAAMC,sBAAsB,GAAGH,YAAY,IAAI;AAC7C,SAAO;AACLC,IAAAA,OAAO,EAAED,YAAY,CAACI;AADjB,GAAP;AAGD,CAJD;;AAKA,MAAMC,wBAAwB,GAAGL,YAAY,IAAI;AAC/C,SAAO;AACLC,IAAAA,OAAO,EAAED,YAAY,CAACM;AADjB,GAAP;AAGD,CAJD;;AAMA,MAAMC,UAAU,GAAGnB,gBAAgB,CACjCW,sBADiC,EAEjCZ,QAAQ,CAACE,iBAAiB,CAACH,QAAD,EAAWS,UAAX,CAAlB,CAFyB,CAAnC;AAIA,MAAMa,UAAU,GAAGpB,gBAAgB,CACjCe,sBADiC,EAEjChB,QAAQ,CAACE,iBAAiB,CAACH,QAAD,EAAWS,UAAX,CAAlB,CAFyB,CAAnC;AAIA,MAAMc,YAAY,GAAGrB,gBAAgB,CACnCiB,wBADmC,EAEnClB,QAAQ,CAACE,iBAAiB,CAACH,QAAD,EAAWW,kBAAX,CAAlB,CAF2B,CAArC;AAIAJ,OAAO,CAACC,GAAR,CAAYa,UAAZ;AAEA,SAASA,UAAT,EAAqBC,UAArB,EAAiCC,YAAjC","sourcesContent":["import React from \"react\";\r\nimport ItemList from \"../ItemList\";\r\nimport { withData, withSwapiService } from \"../hoc-helper\";\r\n\r\nconst withChildFunction = (Wrapped, fn) => {\r\n  return props => {\r\n    console.log(\"withChildFunction props\", props);\r\n\r\n    return <Wrapped {...props}>{fn}</Wrapped>;\r\n  };\r\n};\r\nconst renderName = ({ name }) => <span>{name}</span>;\r\n\r\nconst renderNameAndModel = ({ name, model }) => (\r\n  <span>\r\n    {name} ({model})\r\n  </span>\r\n);\r\nconst mapPersonMethodToProps = swapiService => {\r\n  return {\r\n    getData: swapiService.getAllPeople\r\n  };\r\n};\r\nconst mapPlanetMethodToProps = swapiService => {\r\n  return {\r\n    getData: swapiService.getAllPlanets\r\n  };\r\n};\r\nconst mapStarshipMethodToProps = swapiService => {\r\n  return {\r\n    getData: swapiService.getAllStarships\r\n  };\r\n};\r\n\r\nconst PersonList = withSwapiService(\r\n  mapPersonMethodToProps,\r\n  withData(withChildFunction(ItemList, renderName))\r\n);\r\nconst PlanetList = withSwapiService(\r\n  mapPlanetMethodToProps,\r\n  withData(withChildFunction(ItemList, renderName))\r\n);\r\nconst StarshipList = withSwapiService(\r\n  mapStarshipMethodToProps,\r\n  withData(withChildFunction(ItemList, renderNameAndModel))\r\n);\r\nconsole.log(PersonList);\r\n\r\nexport { PersonList, PlanetList, StarshipList };\r\n"]},"metadata":{},"sourceType":"module"}