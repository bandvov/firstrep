{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\src\\\\components\\\\PersonDetails\\\\PersonDetails.js\";\nimport React from \"react\";\nimport \"./PersonDetails.css\";\nimport SwapiService from \"../../services/SwapiService\";\nimport ErrorButton from '../ErrorButton';\nexport default class PersonDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.SwapiService = new SwapiService();\n    this.state = {\n      planet: null\n    };\n\n    this.updatePerson = () => {\n      if (!this.props.planetId) {\n        return;\n      }\n\n      this.SwapiService.getPlanet(this.props.planetId).then(planet => {\n        this.setState({\n          planet\n        });\n      });\n    };\n  }\n\n  componentDudMount() {\n    this.updatePerson();\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"updated\");\n\n    if (this.props.planetId !== prevProps.planetId) {\n      this.updatePerson();\n    }\n  }\n\n  render() {\n    console.log(\"state\", this.state);\n\n    if (!this.state.planet) {\n      return React.createElement(\"div\", {\n        className: \"details-placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Select planet from the list\");\n    }\n\n    const _this$state$planet = this.state.planet,\n          id = _this$state$planet.id,\n          name = _this$state$planet.name,\n          diameter = _this$state$planet.diameter,\n          rotationPeriod = _this$state$planet.rotationPeriod,\n          climate = _this$state$planet.climate,\n          terrain = _this$state$planet.terrain;\n    return React.createElement(\"div\", {\n      className: \"d-flex person-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" \", React.createElement(\"img\", {\n      src: \"https://starwars-visualguide.com/assets/img/planets/\".concat(id, \".jpg\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ErrorButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"name \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, name)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"eyeColor \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, diameter)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"gender \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, rotationPeriod)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"birth year \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, climate)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"mass \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, terrain))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/components/PersonDetails/PersonDetails.js"],"names":["React","SwapiService","ErrorButton","PersonDetails","Component","state","planet","updatePerson","props","planetId","getPlanet","then","setState","componentDudMount","componentDidUpdate","prevProps","console","log","render","id","name","diameter","rotationPeriod","climate","terrain"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./PersonDetails.css\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\nimport ErrorButton from '../ErrorButton';\r\n\r\nexport default class PersonDetails extends React.Component {\r\n  SwapiService = new SwapiService();\r\n  state = {\r\n    planet: null\r\n  };\r\n  componentDudMount() {\r\n    this.updatePerson();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    console.log(\"updated\");\r\n    if (this.props.planetId !== prevProps.planetId) {\r\n      this.updatePerson();\r\n    }\r\n  }\r\n  updatePerson = () => {\r\n    if (!this.props.planetId) {\r\n      return;\r\n    }\r\n    this.SwapiService.getPlanet(this.props.planetId).then(planet => {\r\n      this.setState({ planet });\r\n    });\r\n  };\r\n  render() {\r\n    console.log(\"state\", this.state);\r\n\r\n    if (!this.state.planet) {\r\n      return (\r\n     \r\n          <div className=\"details-placeholder\">Select planet from the list</div>\r\n      \r\n      );\r\n    }\r\n    const { id, name, diameter, rotationPeriod, climate, terrain } = this.state.planet;\r\n\r\n    return (\r\n      <div className=\"d-flex person-details\">\r\n        {\" \"}\r\n        <img\r\n          src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\r\n        />\r\n        <ul className=\"list-group list-group-flush\">\r\n        <ErrorButton />\r\n          <li className=\"list-group-item\">\r\n            <span>name </span>\r\n            <span>{name}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>eyeColor </span>\r\n            <span>{diameter}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>gender </span>\r\n            <span>{rotationPeriod}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>birth year </span>\r\n            <span>{climate}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>mass </span>\r\n            <span>{terrain}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}