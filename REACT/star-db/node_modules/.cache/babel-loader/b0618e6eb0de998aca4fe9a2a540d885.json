{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\src\\\\components\\\\App\\\\App.js\";\nimport React from \"react\";\nimport Header from \"../Header\";\nimport RendomPlanet from \"../RandomPlanet\";\nimport ErrorButton from \"../ErrorButton\";\nimport \"./App.css\";\nimport ErrorIndicator from \"../ErrorIndicator\";\nimport Row from \"../Row\";\nimport ItemDetails from \"../ItemDetails\";\nimport ItemList from '../ItemList';\nimport SwapiService from \"../../services/SwapiService\";\nimport { Record } from \"../ItemDetails/ItemDetails\";\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showRandomPlanet: true,\n      hasError: false\n    };\n    this.swapiService = new SwapiService();\n\n    this.toggleRandomPlanet = () => {\n      this.setState({\n        showRandomPlanet: !this.state.showRandomPlanet\n      });\n    };\n  }\n\n  componentDidCatch() {\n    this.setState({\n      hasError: true\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return React.createElement(ErrorIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    }\n\n    const planet = this.state.showRandomPlanet ? React.createElement(RendomPlanet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }) : null;\n    const _this$swapiService = this.swapiService,\n          getPerson = _this$swapiService.getPerson,\n          getPlanet = _this$swapiService.getPlanet,\n          getStarship = _this$swapiService.getStarship,\n          getAllPeople = _this$swapiService.getAllPeople,\n          getPersonImage = _this$swapiService.getPersonImage,\n          getStarshipImage = _this$swapiService.getStarshipImage,\n          getPlanetImage = _this$swapiService.getPlanetImage;\n    const personList = React.createElement(ItemList, {\n      getData: getAllPeople,\n      onSelectPerson: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, ({\n      name\n    }) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, name));\n    const personDetails = React.createElement(ItemDetails, {\n      itemId: 1,\n      getData: getPerson,\n      getImageUrl: getPersonImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Record, {\n      field: \"name\",\n      label: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Record, {\n      field: \"gender\",\n      label: \"Gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Record, {\n      field: \"eyeColor\",\n      label: \"Eye color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Record, {\n      field: \"birthYear\",\n      label: \"Birth year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n    const planetDetails = React.createElement(ItemDetails, {\n      itemId: 2,\n      getData: getPlanet,\n      getImageUrl: getPlanetImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Record, {\n      field: \"name\",\n      label: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Record, {\n      field: \"diameter\",\n      label: \"diameter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Record, {\n      field: \"population\",\n      label: \"population\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Record, {\n      field: \"climate\",\n      label: \"climate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"star-db\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), planet, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      className: \"btn btn-warning\",\n      value: \"toggle random planet\",\n      onClick: this.toggleRandomPlanet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(ErrorButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Row, {\n      left: personList,\n      right: planetDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/components/App/App.js"],"names":["React","Header","RendomPlanet","ErrorButton","ErrorIndicator","Row","ItemDetails","ItemList","SwapiService","Record","App","Component","state","showRandomPlanet","hasError","swapiService","toggleRandomPlanet","setState","componentDidCatch","render","planet","getPerson","getPlanet","getStarship","getAllPeople","getPersonImage","getStarshipImage","getPlanetImage","personList","name","personDetails","planetDetails"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Header from \"../Header\";\r\nimport RendomPlanet from \"../RandomPlanet\";\r\nimport ErrorButton from \"../ErrorButton\";\r\nimport \"./App.css\";\r\nimport ErrorIndicator from \"../ErrorIndicator\";\r\nimport Row from \"../Row\";\r\nimport ItemDetails from \"../ItemDetails\";\r\nimport ItemList from '../ItemList';\r\nimport SwapiService from \"../../services/SwapiService\";\r\nimport { Record } from \"../ItemDetails/ItemDetails\";\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    showRandomPlanet: true,\r\n    hasError: false\r\n  };\r\n  swapiService = new SwapiService();\r\n\r\n  toggleRandomPlanet = () => {\r\n    this.setState({ showRandomPlanet: !this.state.showRandomPlanet });\r\n  };\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n    const planet = this.state.showRandomPlanet ? <RendomPlanet /> : null;\r\n\r\n    const {\r\n      getPerson,\r\n      getPlanet,\r\n      getStarship,\r\n      getAllPeople,\r\n      getPersonImage,\r\n      getStarshipImage,\r\n      getPlanetImage\r\n    } = this.swapiService;\r\nconst personList = (\r\n<ItemList getData={getAllPeople} onSelectPerson={()=>{}}>{({name})=><span>{name}</span>}</ItemList>\r\n)\r\n\r\n    const personDetails = (\r\n      <ItemDetails itemId={1} getData={getPerson} getImageUrl={getPersonImage}>\r\n        <Record field=\"name\" label=\"name\" />\r\n        <Record field=\"gender\" label=\"Gender\" />\r\n        <Record field=\"eyeColor\" label=\"Eye color\" />\r\n        <Record field=\"birthYear\" label=\"Birth year\" />\r\n      </ItemDetails>\r\n    );\r\n\r\n    const planetDetails = (\r\n      <ItemDetails\r\n        itemId={2}\r\n        getData={getPlanet}\r\n        getImageUrl={getPlanetImage}\r\n      >\r\n        <Record field=\"name\" label=\"name\"/>\r\n        <Record field=\"diameter\" label=\"diameter\"/>\r\n        <Record field=\"population\" label=\"population\"/>\r\n        <Record field=\"climate\" label=\"climate\"/>\r\n\r\n      </ItemDetails>\r\n    );\r\n\r\n    return (\r\n      <div className=\"star-db\">\r\n        <Header />\r\n        {planet}\r\n        <div>\r\n          <input\r\n            type=\"button\"\r\n            className=\"btn btn-warning\"\r\n            value=\"toggle random planet\"\r\n            onClick={this.toggleRandomPlanet}\r\n          />\r\n          <ErrorButton />\r\n        </div>\r\n        <div>\r\n          <Row left={personList} right={planetDetails} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}