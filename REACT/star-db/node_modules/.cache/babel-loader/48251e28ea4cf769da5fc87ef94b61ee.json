{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = \"https://swapi.co/api\";\n\n    this.getResourse = async url => {\n      const res = await fetch(\"\".concat(this._apiBase).concat(url));\n      return res.json();\n    };\n\n    this.getAllPeople = async () => {\n      let res = await this.getResourse(\"/people/\");\n      return res.results.map(this._transformPeople);\n    };\n\n    this.getPerson = async id => {\n      const person = await this.getResourse(\"/people/\".concat(id, \"/\"));\n      return this._transformPerson(person);\n    };\n\n    this.getAllPlanets = async () => {\n      let res = await this.getResourse(\"/planets/\");\n      return res.results.map(this._transformPlanet);\n    };\n\n    this.getPlanet = async id => {\n      const planet = await this.getResourse(\"/planets/\".concat(id, \"/\"));\n      return this._transformPlanet(planet);\n    };\n\n    this._extractId = item => {\n      return item.url.match(/\\/(\\d)*\\/$/)[1];\n    };\n\n    this._transformPerson = person => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        mass: person.mass,\n        birthYear: person.birth_year,\n        gender: person.gender,\n        eyeColor: person.eye_color\n      };\n    };\n\n    this._transformPlanet = planet => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        diameter: planet.diameter,\n        climate: planet.climate,\n        rotationPeriod: planet.rotation_period,\n        terrain: planet.terrain\n      };\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/services/SwapiService.js"],"names":["SwapiService","_apiBase","getResourse","url","res","fetch","json","getAllPeople","results","map","_transformPeople","getPerson","id","person","_transformPerson","getAllPlanets","_transformPlanet","getPlanet","planet","_extractId","item","match","name","mass","birthYear","birth_year","gender","eyeColor","eye_color","diameter","climate","rotationPeriod","rotation_period","terrain"],"mappings":"AAAA,eAAe,MAAMA,YAAN,CAAmB;AAAA;AAAA,SAChCC,QADgC,GACrB,sBADqB;;AAAA,SAGhCC,WAHgC,GAGlB,MAAMC,GAAN,IAAa;AACzB,YAAMC,GAAG,GAAG,MAAMC,KAAK,WAAI,KAAKJ,QAAT,SAAoBE,GAApB,EAAvB;AACA,aAAOC,GAAG,CAACE,IAAJ,EAAP;AACD,KAN+B;;AAAA,SAOhCC,YAPgC,GAOjB,YAAY;AACzB,UAAIH,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAiB,UAAjB,CAAhB;AACA,aAAOE,GAAG,CAACI,OAAJ,CAAYC,GAAZ,CAAgB,KAAKC,gBAArB,CAAP;AACD,KAV+B;;AAAA,SAWhCC,SAXgC,GAWpB,MAAMC,EAAN,IAAY;AACtB,YAAMC,MAAM,GAAG,MAAM,KAAKX,WAAL,mBAA4BU,EAA5B,OAArB;AACA,aAAO,KAAKE,gBAAL,CAAsBD,MAAtB,CAAP;AACD,KAd+B;;AAAA,SAehCE,aAfgC,GAehB,YAAY;AAC1B,UAAIX,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAiB,WAAjB,CAAhB;AACA,aAAOE,GAAG,CAACI,OAAJ,CAAYC,GAAZ,CAAgB,KAAKO,gBAArB,CAAP;AACD,KAlB+B;;AAAA,SAmBhCC,SAnBgC,GAmBpB,MAAML,EAAN,IAAY;AACtB,YAAMM,MAAM,GAAG,MAAM,KAAKhB,WAAL,oBAA6BU,EAA7B,OAArB;AACA,aAAO,KAAKI,gBAAL,CAAsBE,MAAtB,CAAP;AACD,KAtB+B;;AAAA,SAuBhCC,UAvBgC,GAuBpBC,IAAD,IAAS;AAClB,aAAOA,IAAI,CAACjB,GAAL,CAASkB,KAAT,CAAe,YAAf,EAA6B,CAA7B,CAAP;AACD,KAzB+B;;AAAA,SA0BhCP,gBA1BgC,GA0BbD,MAAM,IAAI;AAC3B,aAAO;AACLD,QAAAA,EAAE,EAAE,KAAKO,UAAL,CAAgBN,MAAhB,CADC;AAELS,QAAAA,IAAI,EAAET,MAAM,CAACS,IAFR;AAGLC,QAAAA,IAAI,EAAEV,MAAM,CAACU,IAHR;AAILC,QAAAA,SAAS,EAAEX,MAAM,CAACY,UAJb;AAKLC,QAAAA,MAAM,EAAEb,MAAM,CAACa,MALV;AAMLC,QAAAA,QAAQ,EAAEd,MAAM,CAACe;AANZ,OAAP;AAQD,KAnC+B;;AAAA,SAoChCZ,gBApCgC,GAoCbE,MAAM,IAAI;AAC3B,aAAO;AACLN,QAAAA,EAAE,EAAE,KAAKO,UAAL,CAAgBD,MAAhB,CADC;AAELI,QAAAA,IAAI,EAAEJ,MAAM,CAACI,IAFR;AAGLO,QAAAA,QAAQ,EAAEX,MAAM,CAACW,QAHZ;AAILC,QAAAA,OAAO,EAAEZ,MAAM,CAACY,OAJX;AAKLC,QAAAA,cAAc,EAAEb,MAAM,CAACc,eALlB;AAMLC,QAAAA,OAAO,EAAEf,MAAM,CAACe;AANX,OAAP;AAQD,KA7C+B;AAAA;;AAAA","sourcesContent":["export default class SwapiService {\r\n  _apiBase = \"https://swapi.co/api\";\r\n\r\n  getResourse = async url => {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    return res.json();\r\n  };\r\n  getAllPeople = async () => {\r\n    let res = await this.getResourse(\"/people/\");\r\n    return res.results.map(this._transformPeople);\r\n  };\r\n  getPerson = async id => {\r\n    const person = await this.getResourse(`/people/${id}/`);\r\n    return this._transformPerson(person);\r\n  };\r\n  getAllPlanets = async () => {\r\n    let res = await this.getResourse(\"/planets/\");\r\n    return res.results.map(this._transformPlanet);\r\n  };\r\n  getPlanet = async id => {\r\n    const planet = await this.getResourse(`/planets/${id}/`);\r\n    return this._transformPlanet(planet);\r\n  };\r\n  _extractId=(item)=> {    \r\n    return item.url.match(/\\/(\\d)*\\/$/)[1];\r\n  }\r\n  _transformPerson = person => {\r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      mass: person.mass,\r\n      birthYear: person.birth_year,\r\n      gender: person.gender,\r\n      eyeColor: person.eye_color\r\n    };\r\n  };\r\n  _transformPlanet = planet => {\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      diameter: planet.diameter,\r\n      climate: planet.climate,\r\n      rotationPeriod: planet.rotation_period,\r\n      terrain: planet.terrain\r\n    };\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}