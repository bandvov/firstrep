{"ast":null,"code":"export default class SwapoService {\n  constructor() {\n    this._apiBase = \"https://swapi.co/api\";\n\n    this._transformPerson = person => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender\n      };\n    };\n  }\n\n  async getResourse(url) {\n    const res = await fetch(\"\".concat(this._apiBase).concat(url));\n\n    if (!res.ok) {\n      throw new Error(\"could not fetch \".concat(url, \" received \").concat(res.status));\n    }\n\n    return await res.json();\n  }\n\n  async getAllPeople() {\n    const res = await this.getResourse(\"/people/\");\n    return res.results;\n  }\n\n  async getPerson(id) {\n    const person = await this.getResourse(\"/people/\".concat(id, \"/\"));\n    return this._transformPerson(person);\n  }\n\n  async getAllPlanets() {\n    const res = await this.getResourse(\"/planets/\");\n    return res.results.map(this._transformPlanet);\n  }\n\n  async getPlanet(id) {\n    const planet = await this.getResourse(\"/planets/\".concat(id, \"/\"));\n    return this._transformPlanet(planet);\n  }\n\n  async getAllStarships() {\n    const res = await this.getResourse(\"/starships/\");\n    return res.results.map(this._transformStarship);\n  }\n\n  async getStarship(id) {\n    const starship = await this.getResourse(\"/starships/\".concat(id, \"/\"));\n    return this._transformStarship(starship);\n  }\n\n  _extractId(item) {\n    const regEx = /\\/(\\d*)\\/$/;\n    return item.url.match(regEx)[1];\n  }\n\n  _transformPlanet(planet) {\n    return {\n      id: this._extractId(planet),\n      name: planet.name,\n      population: planet.population,\n      diameter: planet.diameter,\n      rotation: 44\n    };\n  }\n\n  _transformStarship(starship) {\n    return {\n      id: this._transformStarship(starship),\n      model: starship.model,\n      length: starship.length,\n      crew: starship.crew,\n      passangers: starship.passangers,\n      cargoCapacity: starship.cargoCapacity\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/services/SwapiService.js"],"names":["SwapoService","_apiBase","_transformPerson","person","id","_extractId","name","gender","getResourse","url","res","fetch","ok","Error","status","json","getAllPeople","results","getPerson","getAllPlanets","map","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","item","regEx","match","population","diameter","rotation","model","length","crew","passangers","cargoCapacity"],"mappings":"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","sourcesContent":["export default class SwapoService {\r\n  _apiBase = \"https://swapi.co/api\";\r\n\r\n  async getResourse(url) {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    if (!res.ok) {\r\n      throw new Error(`could not fetch ${url} received ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  }\r\n  async getAllPeople() {\r\n    const res = await this.getResourse(\"/people/\");    \r\n    return res.results;\r\n  }\r\n  async getPerson(id) {\r\n    const person = await this.getResourse(`/people/${id}/`);\r\n    return this._transformPerson(person);\r\n  }\r\n  async getAllPlanets() {\r\n    const res = await this.getResourse(\"/planets/\");\r\n    return res.results.map(this._transformPlanet);\r\n  }\r\n  async getPlanet(id) {\r\n    const planet = await this.getResourse(`/planets/${id}/`);\r\n    return this._transformPlanet(planet);\r\n  }\r\n  async getAllStarships() {\r\n    const res = await this.getResourse(\"/starships/\");\r\n    return res.results.map(this._transformStarship);\r\n  }\r\n  async getStarship(id) {\r\n    const starship = await this.getResourse(`/starships/${id}/`);\r\n    return this._transformStarship(starship);\r\n  }\r\n  _extractId(item) {\r\n    const regEx = /\\/(\\d*)\\/$/;\r\n    return item.url.match(regEx)[1];\r\n  }\r\n  _transformPlanet(planet) {\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      population: planet.population,\r\n      diameter: planet.diameter,\r\n      rotation: 44\r\n    };\r\n  }\r\n  _transformStarship(starship) {\r\n    return {\r\n      id: this._transformStarship(starship),\r\n      model: starship.model,\r\n      length: starship.length,\r\n      crew: starship.crew,\r\n      passangers: starship.passangers,\r\n      cargoCapacity: starship.cargoCapacity\r\n    };\r\n  }\r\n  _transformPerson=(person)=> {\r\n    \r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      gender: person.gender,\r\n\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}