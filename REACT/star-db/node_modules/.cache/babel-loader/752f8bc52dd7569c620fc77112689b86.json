{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\src\\\\components\\\\App\\\\App.js\";\nimport React from \"react\";\nimport Header from \"../Header\";\nimport RendomPlanet from \"../RandomPlanet\";\nimport ErrorButton from \"../ErrorButton\";\nimport \"./App.css\";\nimport ErrorIndicator from \"../ErrorIndicator\";\nimport Row from \"../Row\";\nimport ItemDetails from \"../ItemDetails\";\nimport SwapiService from \"../../services/SwapiService\";\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showRandomPlanet: true,\n      hasError: false\n    };\n    this.swapiService = new SwapiService();\n\n    this.toggleRandomPlanet = () => {\n      this.setState({\n        showRandomPlanet: !this.state.showRandomPlanet\n      });\n    };\n  }\n\n  componentDidCatch() {\n    this.setState({\n      hasError: true\n    });\n  }\n\n  render() {\n    this.swapiService.getAllStarships().then(list => console.log(list));\n\n    if (this.state.hasError) {\n      return React.createElement(ErrorIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n\n    const planet = this.state.showRandomPlanet ? React.createElement(RendomPlanet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }) : null;\n    const _this$swapiService = this.swapiService,\n          getPerson = _this$swapiService.getPerson,\n          getPlanet = _this$swapiService.getPlanet;\n    const personDetails = React.createElement(ItemDetails, {\n      itemId: 11,\n      getData: getPerson,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n    const planetDetails = React.createElement(ItemDetails, {\n      itemId: 1,\n      getData: getPlanet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"star-db\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), planet, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      className: \"btn btn-warning\",\n      value: \"toggle random planet\",\n      onClick: this.toggleRandomPlanet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(ErrorButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Row, {\n      left: personDetails,\n      right: planetDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/components/App/App.js"],"names":["React","Header","RendomPlanet","ErrorButton","ErrorIndicator","Row","ItemDetails","SwapiService","App","Component","state","showRandomPlanet","hasError","swapiService","toggleRandomPlanet","setState","componentDidCatch","render","getAllStarships","then","list","console","log","planet","getPerson","getPlanet","personDetails","planetDetails"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,eAAe,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AACNC,MAAAA,gBAAgB,EAAE,IADZ;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADuC;AAAA,SAK/CC,YAL+C,GAKhC,IAAIN,YAAJ,EALgC;;AAAA,SAO/CO,kBAP+C,GAO1B,MAAM;AACzB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,gBAAgB,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAhC,OAAd;AACD,KAT8C;AAAA;;AAU/CK,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,QAAL,CAAc;AAAEH,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACD;;AACDK,EAAAA,MAAM,GAAG;AACP,SAAKJ,YAAL,CAAkBK,eAAlB,GAAoCC,IAApC,CAA0CC,IAAD,IAAQC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAjD;;AACA,QAAI,KAAKV,KAAL,CAAWE,QAAf,EAAyB;AACvB,aAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,UAAMW,MAAM,GAAG,KAAKb,KAAL,CAAWC,gBAAX,GAA8B,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,GAAiD,IAAhE;AALO,+BAO0B,KAAKE,YAP/B;AAAA,UAOCW,SAPD,sBAOCA,SAPD;AAAA,UAOYC,SAPZ,sBAOYA,SAPZ;AASP,UAAMC,aAAa,GAAG,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,EAArB;AAAyB,MAAA,OAAO,EAAEF,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB;AAEA,UAAMG,aAAa,GAAG,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,CAArB;AAAwB,MAAA,OAAO,EAAEF,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGF,MAFH,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,KAAK,EAAC,sBAHR;AAIE,MAAA,OAAO,EAAE,KAAKT,kBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAHF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAEY,aAAX;AAA0B,MAAA,KAAK,EAAEC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAZF,CADF;AAkBD;;AA5C8C","sourcesContent":["import React from \"react\";\r\nimport Header from \"../Header\";\r\nimport RendomPlanet from \"../RandomPlanet\";\r\nimport ErrorButton from \"../ErrorButton\";\r\nimport \"./App.css\";\r\nimport ErrorIndicator from \"../ErrorIndicator\";\r\nimport Row from \"../Row\";\r\nimport ItemDetails from \"../ItemDetails\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    showRandomPlanet: true,\r\n    hasError: false\r\n  };\r\n  swapiService = new SwapiService();\r\n\r\n  toggleRandomPlanet = () => {\r\n    this.setState({ showRandomPlanet: !this.state.showRandomPlanet });\r\n  };\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n  render() {\r\n    this.swapiService.getAllStarships().then((list)=>console.log(list));\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n    const planet = this.state.showRandomPlanet ? <RendomPlanet /> : null;\r\n\r\n    const { getPerson, getPlanet } = this.swapiService;\r\n\r\n    const personDetails = <ItemDetails itemId={11} getData={getPerson} />;\r\n\r\n    const planetDetails = <ItemDetails itemId={1} getData={getPlanet} />;\r\n\r\n    return (\r\n      <div className=\"star-db\">\r\n        <Header />\r\n        {planet}\r\n        <div>\r\n          <input\r\n            type=\"button\"\r\n            className=\"btn btn-warning\"\r\n            value=\"toggle random planet\"\r\n            onClick={this.toggleRandomPlanet}\r\n          />\r\n          <ErrorButton />\r\n        </div>\r\n        <div>\r\n          <Row left={personDetails} right={planetDetails}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}