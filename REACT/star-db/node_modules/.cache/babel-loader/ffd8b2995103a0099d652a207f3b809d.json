{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\src\\\\components\\\\SwComponents\\\\List.js\";\nimport React from \"react\";\nimport ItemList from \"../ItemList\";\nimport withData from \"../hoc-helper\";\nimport SwapiService from \"../../services/SwapiService\";\nconst swapiService = new SwapiService();\nconst getAllPeople = swapiService.getAllPeople,\n      getAllPlanets = swapiService.getAllPlanets,\n      getAllStarships = swapiService.getAllStarships;\nswapiService.getAllPlanets().then(data => console.log(\"all planets\", data));\n\nconst withChildFunction = (Wrapped, fn) => {\n  return props => {\n    return React.createElement(Wrapped, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), fn);\n  };\n};\n\nconst ListWithChildren = () => {\n  withChildFunction(ItemList, ({\n    name\n  }) => React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, name));\n};\n\nconst PersonList = withData(ListWithChildren, getAllPeople);\nconst PlanetList = withData(ListWithChildren, getAllPlanets);\nconst StarshipList = withData(ListWithChildren, getAllStarships);\nexport { PersonList, PlanetList, StarshipList };","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/components/SwComponents/List.js"],"names":["React","ItemList","withData","SwapiService","swapiService","getAllPeople","getAllPlanets","getAllStarships","then","data","console","log","withChildFunction","Wrapped","fn","props","ListWithChildren","name","PersonList","PlanetList","StarshipList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,MAAMC,YAAY,GAAG,IAAID,YAAJ,EAArB;MAEQE,Y,GAAiDD,Y,CAAjDC,Y;MAAcC,a,GAAmCF,Y,CAAnCE,a;MAAeC,e,GAAoBH,Y,CAApBG,e;AACrCH,YAAY,CAACE,aAAb,GAA6BE,IAA7B,CAAkCC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,IAA3B,CAA1C;;AAEA,MAAMG,iBAAiB,GAAG,CAACC,OAAD,EAAUC,EAAV,KAAiB;AACzC,SAAOC,KAAK,IAAI;AACd,WAAQ,oBAAC,OAAD,oBAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAsBD,EAAtB,CAAR;AACD,GAFD;AAGD,CAJD;;AAKA,MAAME,gBAAgB,GAAG,MAAM;AAC7BJ,EAAAA,iBAAiB,CAACX,QAAD,EAAW,CAAC;AAAEgB,IAAAA;AAAF,GAAD,KAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,IAAP,CAAzB,CAAjB;AACD,CAFD;;AAIA,MAAMC,UAAU,GAAGhB,QAAQ,CAACc,gBAAD,EAAmBX,YAAnB,CAA3B;AACA,MAAMc,UAAU,GAAGjB,QAAQ,CAACc,gBAAD,EAAmBV,aAAnB,CAA3B;AACA,MAAMc,YAAY,GAAGlB,QAAQ,CAACc,gBAAD,EAAmBT,eAAnB,CAA7B;AAEA,SAASW,UAAT,EAAqBC,UAArB,EAAiCC,YAAjC","sourcesContent":["import React from \"react\";\r\nimport ItemList from \"../ItemList\";\r\nimport withData from \"../hoc-helper\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\n\r\nconst swapiService = new SwapiService();\r\n\r\nconst { getAllPeople, getAllPlanets, getAllStarships } = swapiService;\r\nswapiService.getAllPlanets().then(data => console.log(\"all planets\", data));\r\n\r\nconst withChildFunction = (Wrapped, fn) => {\r\n  return props => {\r\n    return (<Wrapped {...props} >{fn}</Wrapped>)\r\n  };\r\n};\r\nconst ListWithChildren = () => {\r\n  withChildFunction(ItemList, ({ name }) => <span>{name}</span>);\r\n};\r\n\r\nconst PersonList = withData(ListWithChildren, getAllPeople);\r\nconst PlanetList = withData(ListWithChildren, getAllPlanets);\r\nconst StarshipList = withData(ListWithChildren, getAllStarships);\r\n\r\nexport { PersonList, PlanetList, StarshipList };\r\n"]},"metadata":{},"sourceType":"module"}