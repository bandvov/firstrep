{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";var SwapiService=function SwapiService(){var _this=this;_classCallCheck(this,SwapiService);this._apiBase=\"https://swapi.co/api\";this.getResourse=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(_this._apiBase).concat(url));case 2:res=_context.sent;return _context.abrupt(\"return\",res.json());case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();this.getAllPeople=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _this.getResourse(\"/people/\");case 2:res=_context2.sent;return _context2.abrupt(\"return\",res.results.map(_this._transformPerson));case 4:case\"end\":return _context2.stop();}}},_callee2);}));this.getPerson=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){var person;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return _this.getResourse(\"/people/\".concat(id,\"/\"));case 2:person=_context3.sent;return _context3.abrupt(\"return\",_this._transformPerson(person));case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x2){return _ref3.apply(this,arguments);};}();this.getAllPlanets=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return _this.getResourse(\"/planets/\");case 2:res=_context4.sent;return _context4.abrupt(\"return\",res.results.map(_this._transformPlanet));case 4:case\"end\":return _context4.stop();}}},_callee4);}));this.getPlanet=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id){var planet;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return _this.getResourse(\"/planets/\".concat(id,\"/\"));case 2:planet=_context5.sent;return _context5.abrupt(\"return\",_this._transformPlanet(planet));case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x3){return _ref5.apply(this,arguments);};}();this._extractId=function(item){return item.url.match(/\\/(\\d)*\\/$/)[1];};this._transformPerson=function(person){return{id:_this._extractId(person),name:person.name,mass:person.mass,birthYear:person.birth_year,gender:person.gender,eyeColor:person.eye_color};};this._transformPlanet=function(planet){return{id:_this._extractId(planet),name:planet.name,diameter:planet.diameter,climate:planet.climate,rotationPeriod:planet.rotation_period,terrain:planet.terrain,population:planet.population};};};export{SwapiService as default};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/services/SwapiService.js"],"names":["SwapiService","_apiBase","getResourse","url","fetch","res","json","getAllPeople","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","_extractId","item","match","name","mass","birthYear","birth_year","gender","eyeColor","eye_color","diameter","climate","rotationPeriod","rotation_period","terrain","population"],"mappings":"kbAAqBA,CAAAA,Y,gFACnBC,Q,CAAW,sB,MAEXC,W,0FAAc,iBAAMC,GAAN,gJACMC,CAAAA,KAAK,WAAI,KAAI,CAACH,QAAT,SAAoBE,GAApB,EADX,QACNE,GADM,+CAELA,GAAG,CAACC,IAAJ,EAFK,wD,oEAIdC,Y,sEAAe,uKACG,CAAA,KAAI,CAACL,WAAL,CAAiB,UAAjB,CADH,QACTG,GADS,iDAENA,GAAG,CAACG,OAAJ,CAAYC,GAAZ,CAAgB,KAAI,CAACC,gBAArB,CAFM,0D,QAIfC,S,2FAAY,kBAAMC,EAAN,wJACW,CAAA,KAAI,CAACV,WAAL,mBAA4BU,EAA5B,MADX,QACJC,MADI,iDAEH,KAAI,CAACH,gBAAL,CAAsBG,MAAtB,CAFG,0D,sEAIZC,a,sEAAgB,uKACE,CAAA,KAAI,CAACZ,WAAL,CAAiB,WAAjB,CADF,QACVG,GADU,iDAEPA,GAAG,CAACG,OAAJ,CAAYC,GAAZ,CAAgB,KAAI,CAACM,gBAArB,CAFO,0D,QAIhBC,S,2FAAY,kBAAMJ,EAAN,wJACW,CAAA,KAAI,CAACV,WAAL,oBAA6BU,EAA7B,MADX,QACJK,MADI,iDAEH,KAAI,CAACF,gBAAL,CAAsBE,MAAtB,CAFG,0D,sEAIZC,U,CAAW,SAACC,IAAD,CAAS,CAClB,MAAOA,CAAAA,IAAI,CAAChB,GAAL,CAASiB,KAAT,CAAe,YAAf,EAA6B,CAA7B,CAAP,CACD,C,MACDV,gB,CAAmB,SAAAG,MAAM,CAAI,CAC3B,MAAO,CACLD,EAAE,CAAE,KAAI,CAACM,UAAL,CAAgBL,MAAhB,CADC,CAELQ,IAAI,CAAER,MAAM,CAACQ,IAFR,CAGLC,IAAI,CAAET,MAAM,CAACS,IAHR,CAILC,SAAS,CAAEV,MAAM,CAACW,UAJb,CAKLC,MAAM,CAAEZ,MAAM,CAACY,MALV,CAMLC,QAAQ,CAAEb,MAAM,CAACc,SANZ,CAAP,CAQD,C,MACDZ,gB,CAAmB,SAAAE,MAAM,CAAI,CAC3B,MAAO,CACLL,EAAE,CAAE,KAAI,CAACM,UAAL,CAAgBD,MAAhB,CADC,CAELI,IAAI,CAAEJ,MAAM,CAACI,IAFR,CAGLO,QAAQ,CAAEX,MAAM,CAACW,QAHZ,CAILC,OAAO,CAAEZ,MAAM,CAACY,OAJX,CAKLC,cAAc,CAAEb,MAAM,CAACc,eALlB,CAMLC,OAAO,CAAEf,MAAM,CAACe,OANX,CAOLC,UAAU,CAAChB,MAAM,CAACgB,UAPb,CAAP,CASD,C,UA9CkBjC,Y","sourcesContent":["export default class SwapiService {\r\n  _apiBase = \"https://swapi.co/api\";\r\n\r\n  getResourse = async url => {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    return res.json();\r\n  };\r\n  getAllPeople = async () => {\r\n    let res = await this.getResourse(\"/people/\");\r\n    return res.results.map(this._transformPerson);\r\n  };\r\n  getPerson = async id => {\r\n    const person = await this.getResourse(`/people/${id}/`);\r\n    return this._transformPerson(person);\r\n  };\r\n  getAllPlanets = async () => {\r\n    let res = await this.getResourse(\"/planets/\");\r\n    return res.results.map(this._transformPlanet);\r\n  };\r\n  getPlanet = async id => {\r\n    const planet = await this.getResourse(`/planets/${id}/`);\r\n    return this._transformPlanet(planet);\r\n  };\r\n  _extractId=(item)=> {    \r\n    return item.url.match(/\\/(\\d)*\\/$/)[1];\r\n  }\r\n  _transformPerson = person => {\r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      mass: person.mass,\r\n      birthYear: person.birth_year,\r\n      gender: person.gender,\r\n      eyeColor: person.eye_color\r\n    };\r\n  };\r\n  _transformPlanet = planet => {\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      diameter: planet.diameter,\r\n      climate: planet.climate,\r\n      rotationPeriod: planet.rotation_period,\r\n      terrain: planet.terrain,\r\n      population:planet.population\r\n    };\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}