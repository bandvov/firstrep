{"ast":null,"code":"export default class SwapoService {\n  constructor() {\n    this._apiBase = \"https://swapi.co/api\";\n\n    this.getPerson = async id => {\n      const person = await this.getResourse(\"/people/\".concat(id, \"/\"));\n      return this._transformPerson(person);\n    };\n\n    this._transformPlanet = planet => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        population: planet.population,\n        diameter: planet.diameter,\n        rotation: 44\n      };\n    };\n\n    this._transformStarship = starship => {\n      return {\n        id: this._transformStarship(starship),\n        model: starship.model,\n        length: starship.length,\n        crew: starship.crew,\n        passangers: starship.passangers,\n        cargoCapacity: starship.cargoCapacity\n      };\n    };\n\n    this._transformPerson = person => {\n      console.log(person);\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender,\n        eyeColor: person.eye_color,\n        birth: person.birth_year,\n        height: person.height\n      };\n    };\n  }\n\n  async getResourse(url) {\n    const res = await fetch(\"\".concat(this._apiBase).concat(url));\n\n    if (!res.ok) {\n      throw new Error(\"could not fetch \".concat(url, \" received \").concat(res.status));\n    }\n\n    return await res.json();\n  }\n\n  async getAllPeople() {\n    const res = await this.getResourse(\"/people/\");\n    return res.results.map(this._transformPerson);\n  }\n\n  async getAllPlanets() {\n    const res = await this.getResourse(\"/planets/\");\n    return res.results.map(this._transformPlanet);\n  }\n\n  async getPlanet(id) {\n    const planet = await this.getResourse(\"/planets/\".concat(id, \"/\"));\n    return this._transformPlanet(planet);\n  }\n\n  async getAllStarships() {\n    const res = await this.getResourse(\"/starships/\");\n    return res.results.map(this._transformStarship);\n  }\n\n  async getStarship(id) {\n    const starship = await this.getResourse(\"/starships/\".concat(id, \"/\"));\n    return this._transformStarship(starship);\n  }\n\n  _extractId(item) {\n    const regEx = /\\/(\\d*)\\/$/;\n    return item.url.match(regEx)[1];\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/services/SwapiService.js"],"names":["SwapoService","_apiBase","getPerson","id","person","getResourse","_transformPerson","_transformPlanet","planet","_extractId","name","population","diameter","rotation","_transformStarship","starship","model","length","crew","passangers","cargoCapacity","console","log","gender","eyeColor","eye_color","birth","birth_year","height","url","res","fetch","ok","Error","status","json","getAllPeople","results","map","getAllPlanets","getPlanet","getAllStarships","getStarship","item","regEx","match"],"mappings":"AAAA,eAAe,MAAMA,YAAN,CAAmB;AAAA;AAAA,SAChCC,QADgC,GACrB,sBADqB;;AAAA,SAchCC,SAdgC,GAcpB,MAAMC,EAAN,IAAY;AACtB,YAAMC,MAAM,GAAG,MAAM,KAAKC,WAAL,mBAA4BF,EAA5B,OAArB;AACA,aAAO,KAAKG,gBAAL,CAAsBF,MAAtB,CAAP;AACD,KAjB+B;;AAAA,SAsChCG,gBAtCgC,GAsCbC,MAAM,IAAI;AAC3B,aAAO;AACLL,QAAAA,EAAE,EAAE,KAAKM,UAAL,CAAgBD,MAAhB,CADC;AAELE,QAAAA,IAAI,EAAEF,MAAM,CAACE,IAFR;AAGLC,QAAAA,UAAU,EAAEH,MAAM,CAACG,UAHd;AAILC,QAAAA,QAAQ,EAAEJ,MAAM,CAACI,QAJZ;AAKLC,QAAAA,QAAQ,EAAE;AALL,OAAP;AAOD,KA9C+B;;AAAA,SA+ChCC,kBA/CgC,GA+CXC,QAAQ,IAAI;AAC/B,aAAO;AACLZ,QAAAA,EAAE,EAAE,KAAKW,kBAAL,CAAwBC,QAAxB,CADC;AAELC,QAAAA,KAAK,EAAED,QAAQ,CAACC,KAFX;AAGLC,QAAAA,MAAM,EAAEF,QAAQ,CAACE,MAHZ;AAILC,QAAAA,IAAI,EAAEH,QAAQ,CAACG,IAJV;AAKLC,QAAAA,UAAU,EAAEJ,QAAQ,CAACI,UALhB;AAMLC,QAAAA,aAAa,EAAEL,QAAQ,CAACK;AANnB,OAAP;AAQD,KAxD+B;;AAAA,SAyDhCd,gBAzDgC,GAyDbF,MAAM,IAAI;AAC3BiB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AAEA,aAAO;AACLD,QAAAA,EAAE,EAAE,KAAKM,UAAL,CAAgBL,MAAhB,CADC;AAELM,QAAAA,IAAI,EAAEN,MAAM,CAACM,IAFR;AAGLa,QAAAA,MAAM,EAAEnB,MAAM,CAACmB,MAHV;AAILC,QAAAA,QAAQ,EAAEpB,MAAM,CAACqB,SAJZ;AAKLC,QAAAA,KAAK,EAAEtB,MAAM,CAACuB,UALT;AAMLC,QAAAA,MAAM,EAAExB,MAAM,CAACwB;AANV,OAAP;AAQD,KApE+B;AAAA;;AAGhC,QAAMvB,WAAN,CAAkBwB,GAAlB,EAAuB;AACrB,UAAMC,GAAG,GAAG,MAAMC,KAAK,WAAI,KAAK9B,QAAT,SAAoB4B,GAApB,EAAvB;;AACA,QAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACX,YAAM,IAAIC,KAAJ,2BAA6BJ,GAA7B,uBAA6CC,GAAG,CAACI,MAAjD,EAAN;AACD;;AACD,WAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AACD;;AACD,QAAMC,YAAN,GAAqB;AACnB,UAAMN,GAAG,GAAG,MAAM,KAAKzB,WAAL,CAAiB,UAAjB,CAAlB;AACA,WAAOyB,GAAG,CAACO,OAAJ,CAAYC,GAAZ,CAAgB,KAAKhC,gBAArB,CAAP;AACD;;AAKD,QAAMiC,aAAN,GAAsB;AACpB,UAAMT,GAAG,GAAG,MAAM,KAAKzB,WAAL,CAAiB,WAAjB,CAAlB;AACA,WAAOyB,GAAG,CAACO,OAAJ,CAAYC,GAAZ,CAAgB,KAAK/B,gBAArB,CAAP;AACD;;AACD,QAAMiC,SAAN,CAAgBrC,EAAhB,EAAoB;AAClB,UAAMK,MAAM,GAAG,MAAM,KAAKH,WAAL,oBAA6BF,EAA7B,OAArB;AACA,WAAO,KAAKI,gBAAL,CAAsBC,MAAtB,CAAP;AACD;;AACD,QAAMiC,eAAN,GAAwB;AACtB,UAAMX,GAAG,GAAG,MAAM,KAAKzB,WAAL,CAAiB,aAAjB,CAAlB;AACA,WAAOyB,GAAG,CAACO,OAAJ,CAAYC,GAAZ,CAAgB,KAAKxB,kBAArB,CAAP;AACD;;AACD,QAAM4B,WAAN,CAAkBvC,EAAlB,EAAsB;AACpB,UAAMY,QAAQ,GAAG,MAAM,KAAKV,WAAL,sBAA+BF,EAA/B,OAAvB;AACA,WAAO,KAAKW,kBAAL,CAAwBC,QAAxB,CAAP;AACD;;AACDN,EAAAA,UAAU,CAACkC,IAAD,EAAO;AACf,UAAMC,KAAK,GAAG,YAAd;AACA,WAAOD,IAAI,CAACd,GAAL,CAASgB,KAAT,CAAeD,KAAf,EAAsB,CAAtB,CAAP;AACD;;AArC+B","sourcesContent":["export default class SwapoService {\r\n  _apiBase = \"https://swapi.co/api\";\r\n\r\n  async getResourse(url) {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    if (!res.ok) {\r\n      throw new Error(`could not fetch ${url} received ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  }\r\n  async getAllPeople() {\r\n    const res = await this.getResourse(\"/people/\");\r\n    return res.results.map(this._transformPerson);\r\n  }\r\n  getPerson = async id => {\r\n    const person = await this.getResourse(`/people/${id}/`);\r\n    return this._transformPerson(person);\r\n  };\r\n  async getAllPlanets() {\r\n    const res = await this.getResourse(\"/planets/\");\r\n    return res.results.map(this._transformPlanet);\r\n  }\r\n  async getPlanet(id) {\r\n    const planet = await this.getResourse(`/planets/${id}/`);\r\n    return this._transformPlanet(planet);\r\n  }\r\n  async getAllStarships() {\r\n    const res = await this.getResourse(\"/starships/\");\r\n    return res.results.map(this._transformStarship);\r\n  }\r\n  async getStarship(id) {\r\n    const starship = await this.getResourse(`/starships/${id}/`);\r\n    return this._transformStarship(starship);\r\n  }\r\n  _extractId(item) {\r\n    const regEx = /\\/(\\d*)\\/$/;\r\n    return item.url.match(regEx)[1];\r\n  }\r\n  _transformPlanet = planet => {\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      population: planet.population,\r\n      diameter: planet.diameter,\r\n      rotation: 44\r\n    };\r\n  };\r\n  _transformStarship = starship => {\r\n    return {\r\n      id: this._transformStarship(starship),\r\n      model: starship.model,\r\n      length: starship.length,\r\n      crew: starship.crew,\r\n      passangers: starship.passangers,\r\n      cargoCapacity: starship.cargoCapacity\r\n    };\r\n  };\r\n  _transformPerson = person => {\r\n    console.log(person);\r\n\r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      gender: person.gender,\r\n      eyeColor: person.eye_color,\r\n      birth: person.birth_year,\r\n      height: person.height\r\n    };\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}