{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\star-db\\\\src\\\\components\\\\SwComponents\\\\List.js\";\nimport React from \"react\";\nimport ItemList from \"../ItemList\";\nimport { withData, withSwapiService } from \"../hoc-helper\";\nimport SwapiService from \"../../services/SwapiService\";\n\nconst withChildFunction = (Wrapped, fn) => {\n  return props => {\n    console.log(\"withChildFunction props\", props);\n    return React.createElement(Wrapped, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), fn);\n  };\n};\n\nconst renderName = ({\n  name\n}) => React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, name);\n\nconst renderNameAndModel = ({\n  name,\n  model\n}) => React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, name, \" (\", model, \")\");\n\nconst mapPersonMethodToProps = swapiService => {\n  return {\n    getData: swapiService.getAllPeople,\n    getImageUrl: swapiService.getPersonImage\n  };\n};\n\nconst mapPlanetMethodToProps = swapiService => {\n  return {\n    getData: swapiService.getAllPlanets,\n    getImageUrl: swapiService.getPlanetImage\n  };\n};\n\nconst mapStarshipMethodToProps = swapiService => {\n  return {\n    getData: swapiService.getAllStarships,\n    getImageUrl: swapiService.getStarshiptImage\n  };\n};\n\nconst PersonList = withSwapiService(withData(withChildFunction(ItemList, renderName)), mapPersonMethodToProps);\nconst PlanetList = withData(withChildFunction(ItemList, renderName), mapPlanetMethodToProps);\nconst StarshipList = withData(withChildFunction(ItemList, renderNameAndModel));\nconsole.log(PersonList);\nexport { PersonList, PlanetList, StarshipList };","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/star-db/src/components/SwComponents/List.js"],"names":["React","ItemList","withData","withSwapiService","SwapiService","withChildFunction","Wrapped","fn","props","console","log","renderName","name","renderNameAndModel","model","mapPersonMethodToProps","swapiService","getData","getAllPeople","getImageUrl","getPersonImage","mapPlanetMethodToProps","getAllPlanets","getPlanetImage","mapStarshipMethodToProps","getAllStarships","getStarshiptImage","PersonList","PlanetList","StarshipList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,eAA3C;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,OAAD,EAAUC,EAAV,KAAiB;AACzC,SAAOC,KAAK,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AAEA,WAAO,oBAAC,OAAD,oBAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAqBD,EAArB,CAAP;AACD,GAJD;AAKD,CAND;;AAOA,MAAMI,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,IAAP,CAAjC;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAED,EAAAA,IAAF;AAAQE,EAAAA;AAAR,CAAD,KACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,IADH,QACWE,KADX,MADF;;AAKA,MAAMC,sBAAsB,GAAGC,YAAY,IAAI;AAC7C,SAAO;AACLC,IAAAA,OAAO,EAAED,YAAY,CAACE,YADjB;AAELC,IAAAA,WAAW,EAAEH,YAAY,CAACI;AAFrB,GAAP;AAID,CALD;;AAMA,MAAMC,sBAAsB,GAAGL,YAAY,IAAI;AAC7C,SAAO;AACLC,IAAAA,OAAO,EAAED,YAAY,CAACM,aADjB;AAELH,IAAAA,WAAW,EAAEH,YAAY,CAACO;AAFrB,GAAP;AAID,CALD;;AAMA,MAAMC,wBAAwB,GAAGR,YAAY,IAAI;AAC/C,SAAO;AACLC,IAAAA,OAAO,EAAED,YAAY,CAACS,eADjB;AAELN,IAAAA,WAAW,EAAEH,YAAY,CAACU;AAFrB,GAAP;AAID,CALD;;AAOA,MAAMC,UAAU,GAAGxB,gBAAgB,CACjCD,QAAQ,CAACG,iBAAiB,CAACJ,QAAD,EAAWU,UAAX,CAAlB,CADyB,EAEjCI,sBAFiC,CAAnC;AAIA,MAAMa,UAAU,GAAG1B,QAAQ,CACzBG,iBAAiB,CAACJ,QAAD,EAAWU,UAAX,CADQ,EAEzBU,sBAFyB,CAA3B;AAIA,MAAMQ,YAAY,GAAG3B,QAAQ,CAACG,iBAAiB,CAACJ,QAAD,EAAWY,kBAAX,CAAlB,CAA7B;AACAJ,OAAO,CAACC,GAAR,CAAYiB,UAAZ;AAEA,SAASA,UAAT,EAAqBC,UAArB,EAAiCC,YAAjC","sourcesContent":["import React from \"react\";\r\nimport ItemList from \"../ItemList\";\r\nimport { withData, withSwapiService } from \"../hoc-helper\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\n\r\nconst withChildFunction = (Wrapped, fn) => {\r\n  return props => {\r\n    console.log(\"withChildFunction props\", props);\r\n\r\n    return <Wrapped {...props}>{fn}</Wrapped>;\r\n  };\r\n};\r\nconst renderName = ({ name }) => <span>{name}</span>;\r\n\r\nconst renderNameAndModel = ({ name, model }) => (\r\n  <span>\r\n    {name} ({model})\r\n  </span>\r\n);\r\nconst mapPersonMethodToProps = swapiService => {\r\n  return {\r\n    getData: swapiService.getAllPeople,\r\n    getImageUrl: swapiService.getPersonImage\r\n  };\r\n};\r\nconst mapPlanetMethodToProps = swapiService => {\r\n  return {\r\n    getData: swapiService.getAllPlanets,\r\n    getImageUrl: swapiService.getPlanetImage\r\n  };\r\n};\r\nconst mapStarshipMethodToProps = swapiService => {\r\n  return {\r\n    getData: swapiService.getAllStarships,\r\n    getImageUrl: swapiService.getStarshiptImage\r\n  };\r\n};\r\n\r\nconst PersonList = withSwapiService(\r\n  withData(withChildFunction(ItemList, renderName)),\r\n  mapPersonMethodToProps\r\n);\r\nconst PlanetList = withData(\r\n  withChildFunction(ItemList, renderName),\r\n  mapPlanetMethodToProps\r\n);\r\nconst StarshipList = withData(withChildFunction(ItemList, renderNameAndModel));\r\nconsole.log(PersonList);\r\n\r\nexport { PersonList, PlanetList, StarshipList };\r\n"]},"metadata":{},"sourceType":"module"}