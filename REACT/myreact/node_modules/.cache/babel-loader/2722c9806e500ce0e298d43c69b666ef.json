{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\myreact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\REACT\\\\myreact\\\\src\\\\components\\\\App\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport AppToDoList from \"../AppToDoList\";\nimport AppSearchPanel from \"../AppSearchPanel\";\nimport AppHeader from \"../AppHeader\";\nimport ItemsStatusFilter from \"../AppItemsStatusFilter\";\nimport AppItemAddForm from \"../AppItemAddForm\";\nimport \"./App.css\";\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      toDoData: [this.createToDoItem(\"drink coffee\"), this.createToDoItem(\"eat icecream\"), this.createToDoItem(\"buy car\")],\n      term: \"\",\n      filter: \"all\"\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        toDoData\n      }) => {\n        let filteredToDoData = toDoData.filter(item => item.id !== id);\n        console.log(filteredToDoData);\n        return {\n          toDoData: filteredToDoData\n        };\n      });\n    };\n\n    this.addItem = text => {\n      let newItem = this.createToDoItem(text);\n      this.setState(({\n        toDoData\n      }) => {\n        let newArr = [...toDoData, newItem];\n        return {\n          toDoData: newArr\n        };\n      });\n    };\n\n    this.updateValue = evt => {\n      this.setState({\n        inputValue: evt.target.value\n      });\n    };\n\n    this.toggleProperty = (arr, id, prop) => {\n      const idx = arr.findIndex(el => el.id === id);\n      const oldItem = arr[idx];\n\n      const newItem = _objectSpread({}, oldItem, {\n        [prop]: !oldItem[prop]\n      });\n\n      console.log(newItem);\n      return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n    };\n\n    this.onToggleDone = id => {\n      this.setState(({\n        toDoData\n      }) => {\n        return {\n          toDoData: this.toggleProperty(toDoData, id, \"done\")\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        toDoData\n      }) => {\n        return {\n          toDoData: this.toggleProperty(toDoData, id, \"tant\")\n        };\n      });\n    };\n\n    this.search = (items, term) => {\n      if (term.length === 0) {\n        return items;\n      }\n\n      return items.filter(item => {\n        return item.label.indexOf(term) > -1;\n      });\n    };\n\n    this.onSearchChange = e => {\n      let term = e.target.value;\n      this.setState({\n        term\n      });\n    };\n\n    this.filter = (items, filter) => {\n      switch (filter) {\n        case \"all\":\n          return items;\n\n        case \"active\":\n          return items.filter(item => !item.done);\n\n        case 'done':\n          return items.filter(item => item.done);\n\n        default:\n          return items;\n      }\n    };\n  }\n\n  createToDoItem(label) {\n    return {\n      label,\n      tant: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  render() {\n    const doneCount = this.state.toDoData.filter(el => el.done).length;\n    const toDoCount = this.state.toDoData.length - doneCount;\n    const visibleItems = this.filter(this.search(this.state.toDoData, this.state.term), this.state.filter);\n    return React.createElement(\"div\", {\n      className: \"header d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" d-flex status-filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      done: doneCount,\n      todo: toDoCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(AppSearchPanel, {\n      onSearchChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(ItemsStatusFilter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })))), React.createElement(AppToDoList, {\n      todos: visibleItems,\n      onDeleted: this.deleteItem,\n      onToggleDone: this.onToggleDone,\n      onToggleImportant: this.onToggleImportant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(AppItemAddForm, {\n      onItemAdded: this.addItem,\n      newItemAdd: this.updateValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/REACT/myreact/src/components/App/App.js"],"names":["React","AppToDoList","AppSearchPanel","AppHeader","ItemsStatusFilter","AppItemAddForm","App","Component","maxId","state","toDoData","createToDoItem","term","filter","deleteItem","id","setState","filteredToDoData","item","console","log","addItem","text","newItem","newArr","updateValue","evt","inputValue","target","value","toggleProperty","arr","prop","idx","findIndex","el","oldItem","slice","onToggleDone","onToggleImportant","search","items","length","label","indexOf","onSearchChange","e","done","tant","render","doneCount","toDoCount","visibleItems"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport AppToDoList from \"../AppToDoList\";\r\nimport AppSearchPanel from \"../AppSearchPanel\";\r\nimport AppHeader from \"../AppHeader\";\r\nimport ItemsStatusFilter from \"../AppItemsStatusFilter\";\r\nimport AppItemAddForm from \"../AppItemAddForm\";\r\nimport \"./App.css\";\r\n\r\nexport default class App extends React.Component {\r\n  maxId = 100;\r\n  state = {\r\n    toDoData: [\r\n      this.createToDoItem(\"drink coffee\"),\r\n      this.createToDoItem(\"eat icecream\"),\r\n      this.createToDoItem(\"buy car\")\r\n    ],\r\n    term: \"\",\r\n    filter: \"all\"\r\n  };\r\n\r\n  createToDoItem(label) {\r\n    return {\r\n      label,\r\n      tant: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    };\r\n  }\r\n\r\n  deleteItem = id => {\r\n    this.setState(({ toDoData }) => {\r\n      let filteredToDoData = toDoData.filter(item => item.id !== id);\r\n      console.log(filteredToDoData);\r\n      return {\r\n        toDoData: filteredToDoData\r\n      };\r\n    });\r\n  };\r\n  addItem = text => {\r\n    let newItem = this.createToDoItem(text);\r\n    this.setState(({ toDoData }) => {\r\n      let newArr = [...toDoData, newItem];\r\n      return {\r\n        toDoData: newArr\r\n      };\r\n    });\r\n  };\r\n  updateValue = evt => {\r\n    this.setState({ inputValue: evt.target.value });\r\n  };\r\n\r\n  toggleProperty = (arr, id, prop) => {\r\n    const idx = arr.findIndex(el => el.id === id);\r\n    const oldItem = arr[idx];\r\n    const newItem = { ...oldItem, [prop]: !oldItem[prop] };\r\n    console.log(newItem);\r\n\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n  };\r\n\r\n  onToggleDone = id => {\r\n    this.setState(({ toDoData }) => {\r\n      return {\r\n        toDoData: this.toggleProperty(toDoData, id, \"done\")\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleImportant = id => {\r\n    this.setState(({ toDoData }) => {\r\n      return {\r\n        toDoData: this.toggleProperty(toDoData, id, \"tant\")\r\n      };\r\n    });\r\n  };\r\n  search = (items, term) => {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n    return items.filter(item => {\r\n      return item.label.indexOf(term) > -1;\r\n    });\r\n  };\r\n  onSearchChange = e => {\r\n    let term = e.target.value;\r\n    this.setState({ term });\r\n  };\r\n  filter = (items, filter) => {\r\n    switch (filter) {\r\n      case \"all\":\r\n        return items;\r\n      case \"active\":\r\n        return items.filter(item => !item.done);\r\n        case 'done': return items.filter(item=>item.done);\r\n        default:return items;\r\n    }\r\n  };\r\n  render() {\r\n    const doneCount = this.state.toDoData.filter(el => el.done).length;\r\n    const toDoCount = this.state.toDoData.length - doneCount;\r\n    const visibleItems = this.filter(this.search(this.state.toDoData, this.state.term),this.state.filter);\r\n    return (\r\n      <div className=\"header d-flex\">\r\n          <div>\r\n          <div className=\" d-flex status-filter\">\r\n            <div>\r\n\r\n          <AppHeader done={doneCount} todo={toDoCount} />\r\n  <div>\r\n\r\n          <AppSearchPanel onSearchChange={this.onSearchChange}/>\r\n              <ItemsStatusFilter />\r\n  </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <AppToDoList\r\n            todos={visibleItems}\r\n            onDeleted={this.deleteItem}\r\n            onToggleDone={this.onToggleDone}\r\n            onToggleImportant={this.onToggleImportant}\r\n          />\r\n          <AppItemAddForm\r\n            onItemAdded={this.addItem}\r\n            newItemAdd={this.updateValue}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}